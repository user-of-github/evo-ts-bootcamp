{"id":"EAff","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeInternals.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\mergeInternals.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../observable/from","loc":{"line":1,"column":26},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeInternals.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\from.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\mergeInternals.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.mergeInternals=n;var r=require(\"../observable/from\"),e=require(\"./OperatorSubscriber\");function n(n,t,u,o,i,c,s,f){var a=[],b=0,l=0,p=!1,v=function(){!p||a.length||b||t.complete()},d=function(r){return b<o?h(r):a.push(r)},h=function(n){c&&t.next(n),b++;var f=!1;(0,r.innerFrom)(u(n,l++)).subscribe(new e.OperatorSubscriber(t,function(r){null==i||i(r),c?d(r):t.next(r)},function(){f=!0},void 0,function(){if(f)try{b--;for(var r=function(){var r=a.shift();s?t.add(s.schedule(function(){return h(r)})):h(r)};a.length&&b<o;)r();v()}catch(e){t.error(e)}}))};return n.subscribe(new e.OperatorSubscriber(t,d,function(){p=!0,v()})),function(){null==f||f()}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":97}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":99}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":107}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":129}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":131}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":139}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":20,"column":6},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":20,"column":16},"generated":{"line":1,"column":172}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":21,"column":2},"generated":{"line":1,"column":174}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":22,"column":2},"generated":{"line":1,"column":176}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":178}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":180}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":182}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":26,"column":2},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":1,"column":186}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":28,"column":2},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":31,"column":8},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":31,"column":8},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":31,"column":22},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":33,"column":6},"generated":{"line":1,"column":200}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":33,"column":15},"generated":{"line":1,"column":202}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":35,"column":6},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":35,"column":14},"generated":{"line":1,"column":206}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":1,"column":208}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":37,"column":19},"generated":{"line":1,"column":211}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":42,"column":8},"generated":{"line":1,"column":213}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":42,"column":24},"generated":{"line":1,"column":215}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":46,"column":8},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":46,"column":23},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":46,"column":30},"generated":{"line":1,"column":232}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":46,"column":41},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":47,"column":6},"generated":{"line":1,"column":243}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":1,"column":245}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":20},"generated":{"line":1,"column":259}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":21},"generated":{"line":1,"column":268}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":35},"generated":{"line":1,"column":271}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":35},"generated":{"line":1,"column":278}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":44},"generated":{"line":1,"column":280}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":57},"generated":{"line":1,"column":282}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":68},"generated":{"line":1,"column":284}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":77},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":84},"generated":{"line":1,"column":289}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":52,"column":89},"generated":{"line":1,"column":294}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":1,"column":298}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":54,"column":21},"generated":{"line":1,"column":300}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":54,"column":22},"generated":{"line":1,"column":309}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":1,"column":312}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":58,"column":14},"generated":{"line":1,"column":315}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":58,"column":25},"generated":{"line":1,"column":317}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":58,"column":30},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":62,"column":4},"generated":{"line":1,"column":325}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":1,"column":329}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":67,"column":8},"generated":{"line":1,"column":333}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":67,"column":24},"generated":{"line":1,"column":336}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":70,"column":14},"generated":{"line":1,"column":339}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":70,"column":14},"generated":{"line":1,"column":341}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":70,"column":14},"generated":{"line":1,"column":343}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":70,"column":14},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":70,"column":22},"generated":{"line":1,"column":356}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":70,"column":29},"generated":{"line":1,"column":358}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":70,"column":39},"generated":{"line":1,"column":364}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":1,"column":374}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":10},"generated":{"line":1,"column":378}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":1,"column":380}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":72,"column":8},"generated":{"line":1,"column":399}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":1,"column":401}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":73,"column":9},"generated":{"line":1,"column":410}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":76,"column":10},"generated":{"line":1,"column":413}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":76,"column":10},"generated":{"line":1,"column":419}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":76,"column":10},"generated":{"line":1,"column":422}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":76,"column":25},"generated":{"line":1,"column":424}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":78,"column":14},"generated":{"line":1,"column":427}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":81,"column":12},"generated":{"line":1,"column":429}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":81,"column":22},"generated":{"line":1,"column":431}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":84,"column":12},"generated":{"line":1,"column":434}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":84,"column":23},"generated":{"line":1,"column":436}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":84,"column":28},"generated":{"line":1,"column":441}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":87,"column":8},"generated":{"line":1,"column":445}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":90,"column":10},"generated":{"line":1,"column":456}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":90,"column":26},"generated":{"line":1,"column":459}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":93,"column":8},"generated":{"line":1,"column":467}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":94,"column":8},"generated":{"line":1,"column":469}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":1,"column":480}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":98,"column":14},"generated":{"line":1,"column":483}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":103,"column":16},"generated":{"line":1,"column":485}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":107,"column":14},"generated":{"line":1,"column":489}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":112,"column":21},"generated":{"line":1,"column":493}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":497}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":501}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":503}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":22},"generated":{"line":1,"column":514}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":22},"generated":{"line":1,"column":518}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":38},"generated":{"line":1,"column":520}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":113,"column":45},"generated":{"line":1,"column":522}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":16},"generated":{"line":1,"column":530}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":36},"generated":{"line":1,"column":532}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":47},"generated":{"line":1,"column":534}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":51},"generated":{"line":1,"column":538}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":69},"generated":{"line":1,"column":540}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":78},"generated":{"line":1,"column":549}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":84},"generated":{"line":1,"column":560}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":84},"generated":{"line":1,"column":567}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":95},"generated":{"line":1,"column":569}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":114},"generated":{"line":1,"column":575}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":117,"column":125},"generated":{"line":1,"column":577}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":112,"column":21},"generated":{"line":1,"column":581}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":112,"column":28},"generated":{"line":1,"column":583}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":112,"column":38},"generated":{"line":1,"column":591}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":112,"column":47},"generated":{"line":1,"column":593}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":144,"column":1},"generated":{"line":1,"column":596}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":120,"column":14},"generated":{"line":1,"column":600}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":121,"column":14},"generated":{"line":1,"column":604}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":121,"column":21},"generated":{"line":1,"column":610}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":122,"column":14},"generated":{"line":1,"column":613}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":122,"column":25},"generated":{"line":1,"column":615}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":122,"column":31},"generated":{"line":1,"column":621}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":141,"column":9},"generated":{"line":1,"column":629}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":131,"column":2},"generated":{"line":1,"column":636}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":131,"column":9},"generated":{"line":1,"column":638}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":1,"column":648}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":132,"column":8},"generated":{"line":1,"column":652}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":132,"column":4},"generated":{"line":1,"column":654}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":132,"column":27},"generated":{"line":1,"column":673}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":132,"column":39},"generated":{"line":1,"column":675}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":132,"column":50},"generated":{"line":1,"column":677}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":134,"column":6},"generated":{"line":1,"column":688}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":134,"column":19},"generated":{"line":1,"column":691}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":135,"column":6},"generated":{"line":1,"column":693}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":141,"column":9},"generated":{"line":1,"column":700}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":142,"column":4},"generated":{"line":1,"column":711}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":142,"column":4},"generated":{"line":1,"column":717}},{"source":"../../../../src/internal/operators/mergeInternals.ts","name":null,"original":{"line":142,"column":4},"generated":{"line":1,"column":720}}],"sources":{"../../../../src/internal/operators/mergeInternals.ts":"import { Observable } from '../Observable';\nimport { innerFrom } from '../observable/from';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * A process embodying the general \"merge\" strategy. This is used in\n * `mergeMap` and `mergeScan` because the logic is otherwise nearly identical.\n * @param source The original source observable\n * @param subscriber The consumer subscriber\n * @param project The projection function to get our inner sources\n * @param concurrent The number of concurrent inner subscriptions\n * @param onBeforeNext Additional logic to apply before nexting to our consumer\n * @param expand If `true` this will perform an \"expand\" strategy, which differs only\n * in that it recurses, and the inner subscription must be schedule-able.\n * @param innerSubScheduler A scheduler to use to schedule inner subscriptions,\n * this is to support the expand strategy, mostly, and should be deprecated\n */\nexport function mergeInternals<T, R>(\n  source: Observable<T>,\n  subscriber: Subscriber<R>,\n  project: (value: T, index: number) => ObservableInput<R>,\n  concurrent: number,\n  onBeforeNext?: (innerValue: R) => void,\n  expand?: boolean,\n  innerSubScheduler?: SchedulerLike,\n  additionalTeardown?: () => void\n) {\n  // Buffered values, in the event of going over our concurrency limit\n  const buffer: T[] = [];\n  // The number of active inner subscriptions.\n  let active = 0;\n  // An index to pass to our accumulator function\n  let index = 0;\n  // Whether or not the outer source has completed.\n  let isComplete = false;\n\n  /**\n   * Checks to see if we can complete our result or not.\n   */\n  const checkComplete = () => {\n    // If the outer has completed, and nothing is left in the buffer,\n    // and we don't have any active inner subscriptions, then we can\n    // Emit the state and complete.\n    if (isComplete && !buffer.length && !active) {\n      subscriber.complete();\n    }\n  };\n\n  // If we're under our concurrency limit, just start the inner subscription, otherwise buffer and wait.\n  const outerNext = (value: T) => (active < concurrent ? doInnerSub(value) : buffer.push(value));\n\n  const doInnerSub = (value: T) => {\n    // If we're expanding, we need to emit the outer values and the inner values\n    // as the inners will \"become outers\" in a way as they are recursively fed\n    // back to the projection mechanism.\n    expand && subscriber.next(value as any);\n\n    // Increment the number of active subscriptions so we can track it\n    // against our concurrency limit later.\n    active++;\n\n    // A flag used to show that the inner observable completed.\n    // This is checked during finalization to see if we should\n    // move to the next item in the buffer, if there is on.\n    let innerComplete = false;\n\n    // Start our inner subscription.\n    innerFrom(project(value, index++)).subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        (innerValue) => {\n          // `mergeScan` has additional handling here. For example\n          // taking the inner value and updating state.\n          onBeforeNext?.(innerValue);\n\n          if (expand) {\n            // If we're expanding, then just recurse back to our outer\n            // handler. It will emit the value first thing.\n            outerNext(innerValue as any);\n          } else {\n            // Otherwise, emit the inner value.\n            subscriber.next(innerValue);\n          }\n        },\n        () => {\n          // Flag that we have completed, so we know to check the buffer\n          // during finalization.\n          innerComplete = true;\n        },\n        // Errors are passed to the destination.\n        undefined,\n        () => {\n          // During finalization, if the inner completed (it wasn't errored or\n          // cancelled), then we want to try the next item in the buffer if\n          // there is one.\n          if (innerComplete) {\n            // We have to wrap this in a try/catch because it happens during\n            // finalization, possibly asynchronously, and we want to pass\n            // any errors that happen (like in a projection function) to\n            // the outer Subscriber.\n            try {\n              // INNER SOURCE COMPLETE\n              // Decrement the active count to ensure that the next time\n              // we try to call `doInnerSub`, the number is accurate.\n              active--;\n              // If we have more values in the buffer, try to process those\n              // Note that this call will increment `active` ahead of the\n              // next conditional, if there were any more inner subscriptions\n              // to start.\n              while (buffer.length && active < concurrent) {\n                const bufferedValue = buffer.shift()!;\n                // Particularly for `expand`, we need to check to see if a scheduler was provided\n                // for when we want to start our inner subscription. Otherwise, we just start\n                // are next inner subscription.\n                innerSubScheduler ? subscriber.add(innerSubScheduler.schedule(() => doInnerSub(bufferedValue))) : doInnerSub(bufferedValue);\n              }\n              // Check to see if we can complete, and complete if so.\n              checkComplete();\n            } catch (err) {\n              subscriber.error(err);\n            }\n          }\n        }\n      )\n    );\n  };\n\n  // Subscribe to our source observable.\n  source.subscribe(\n    new OperatorSubscriber(subscriber, outerNext, () => {\n      // Outer completed, make a note of it, and check to see if we can complete everything.\n      isComplete = true;\n      checkComplete();\n    })\n  );\n\n  // Additional teardown (for when the destination is torn down).\n  // Other teardown is added implicitly via subscription above.\n  return () => {\n    additionalTeardown?.();\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"8f5a27f19e1d6641ccda8deba4dc11c5","cacheData":{"env":{}}}