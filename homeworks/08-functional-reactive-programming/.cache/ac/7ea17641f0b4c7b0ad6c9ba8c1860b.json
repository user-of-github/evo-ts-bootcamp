{"id":"../node_modules/rxjs/dist/esm5/internal/operators/isEmpty.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\isEmpty.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\isEmpty.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621875871998},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\isEmpty.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\isEmpty.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isEmpty = isEmpty;\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction isEmpty() {\n  return (0, _lift.operate)(function (source, subscriber) {\n    source.subscribe(new _OperatorSubscriber.OperatorSubscriber(subscriber, function () {\n      subscriber.next(false);\n      subscriber.complete();\n    }, function () {\n      subscriber.next(true);\n      subscriber.complete();\n    }));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":68,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":68,"column":6},"generated":{"line":12,"column":16}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":68,"column":23},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":17},"generated":{"line":13,"column":28}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":18},"generated":{"line":13,"column":38}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":17},"generated":{"line":13,"column":44}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":26},"generated":{"line":13,"column":46}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":17},"generated":{"line":13,"column":56}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":36},"generated":{"line":13,"column":58}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":14,"column":4}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":10},"generated":{"line":14,"column":10}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":11},"generated":{"line":14,"column":11}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":14,"column":20}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":14,"column":21}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":71,"column":10},"generated":{"line":14,"column":25}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":14,"column":63}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":72,"column":8},"generated":{"line":14,"column":64}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":14,"column":74}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":14,"column":76}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":73,"column":8},"generated":{"line":14,"column":88}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":74,"column":10},"generated":{"line":15,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":74,"column":10},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":74,"column":20},"generated":{"line":15,"column":16}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":74,"column":21},"generated":{"line":15,"column":17}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":74,"column":10},"generated":{"line":15,"column":21}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":74,"column":26},"generated":{"line":15,"column":22}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":74,"column":10},"generated":{"line":15,"column":27}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":75,"column":10},"generated":{"line":16,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":75,"column":10},"generated":{"line":16,"column":6}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":75,"column":20},"generated":{"line":16,"column":16}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":75,"column":21},"generated":{"line":16,"column":17}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":75,"column":10},"generated":{"line":16,"column":25}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":76,"column":9},"generated":{"line":17,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":17,"column":5}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":17,"column":7}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":77,"column":8},"generated":{"line":17,"column":19}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":78,"column":10},"generated":{"line":18,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":78,"column":10},"generated":{"line":18,"column":6}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":78,"column":20},"generated":{"line":18,"column":16}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":78,"column":21},"generated":{"line":18,"column":17}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":78,"column":10},"generated":{"line":18,"column":21}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":78,"column":26},"generated":{"line":18,"column":22}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":78,"column":10},"generated":{"line":18,"column":26}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":79,"column":10},"generated":{"line":19,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":79,"column":10},"generated":{"line":19,"column":6}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":79,"column":20},"generated":{"line":19,"column":16}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":79,"column":21},"generated":{"line":19,"column":17}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":79,"column":10},"generated":{"line":19,"column":25}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":80,"column":9},"generated":{"line":20,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":71,"column":6},"generated":{"line":20,"column":5}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":70,"column":4},"generated":{"line":20,"column":6}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":83,"column":3},"generated":{"line":21,"column":0}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":9},"generated":{"line":21,"column":3}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":21,"column":4}},{"source":"../../../../src/internal/operators/isEmpty.ts","name":null,"original":{"line":84,"column":1},"generated":{"line":22,"column":0}}],"sources":{"../../../../src/internal/operators/isEmpty.ts":"import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Emits `false` if the input Observable emits any values, or emits `true` if the\n * input Observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an Observable.</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable.\n *\n * ```ts\n * import { Subject } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n *\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n *\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Outputs\n * // a\n * // false\n * // b\n * // c\n * ```\n *\n * Emit `true` for an empty Observable.\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link index/EMPTY}\n *\n * @return A function that returns an Observable that emits boolean value\n * indicating whether the source Observable was empty or not.\n */\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        () => {\n          subscriber.next(false);\n          subscriber.complete();\n        },\n        () => {\n          subscriber.next(true);\n          subscriber.complete();\n        }\n      )\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"f7946c0cf2dd1ecf089933b7e6796189","cacheData":{"env":{}}}