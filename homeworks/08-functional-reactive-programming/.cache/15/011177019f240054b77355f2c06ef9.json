{"id":"uPz1","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\tsconfig.json","includedInParent":true,"mtime":1621875916377},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143}],"generated":{"js":"\"use strict\";var e;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.state=exports.BlockType=void 0,function(e){e.WALL=\"WALL\",e.WINDOW=\"WINDOW\"}(e=exports.BlockType||(exports.BlockType={})),exports.state={clicked:0,fed:0,catPosition:{row:0,column:0},windowsCoordinates:Array(),field:[]};"},"sourceMaps":{"js":{"mappings":[{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":0}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":13}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":1,"column":17}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":19}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":26}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":41}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":49}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":62}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":63}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":70}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":74}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":82}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":88}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":96}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":111}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":113}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":1,"column":122}},{"source":"scripts/types.ts","name":null,"original":{"line":2,"column":4},"generated":{"line":1,"column":125}},{"source":"scripts/types.ts","name":null,"original":{"line":2,"column":4},"generated":{"line":1,"column":127}},{"source":"scripts/types.ts","name":null,"original":{"line":2,"column":4},"generated":{"line":1,"column":132}},{"source":"scripts/types.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":1,"column":139}},{"source":"scripts/types.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":1,"column":141}},{"source":"scripts/types.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":1,"column":148}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":157}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":1,"column":158}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":1,"column":160}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":1,"column":168}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":1,"column":180}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":18},"generated":{"line":1,"column":188}},{"source":"scripts/types.ts","name":null,"original":{"line":1,"column":27},"generated":{"line":1,"column":198}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":203}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":13},"generated":{"line":1,"column":211}},{"source":"scripts/types.ts","name":null,"original":{"line":20,"column":32},"generated":{"line":1,"column":217}},{"source":"scripts/types.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":1,"column":218}},{"source":"scripts/types.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":1,"column":226}},{"source":"scripts/types.ts","name":null,"original":{"line":22,"column":4},"generated":{"line":1,"column":228}},{"source":"scripts/types.ts","name":null,"original":{"line":22,"column":9},"generated":{"line":1,"column":232}},{"source":"scripts/types.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":1,"column":234}},{"source":"scripts/types.ts","name":null,"original":{"line":23,"column":17},"generated":{"line":1,"column":246}},{"source":"scripts/types.ts","name":null,"original":{"line":24,"column":8},"generated":{"line":1,"column":247}},{"source":"scripts/types.ts","name":null,"original":{"line":24,"column":13},"generated":{"line":1,"column":251}},{"source":"scripts/types.ts","name":null,"original":{"line":25,"column":8},"generated":{"line":1,"column":253}},{"source":"scripts/types.ts","name":null,"original":{"line":25,"column":16},"generated":{"line":1,"column":260}},{"source":"scripts/types.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":1,"column":263}},{"source":"scripts/types.ts","name":null,"original":{"line":27,"column":24},"generated":{"line":1,"column":282}},{"source":"scripts/types.ts","name":null,"original":{"line":28,"column":4},"generated":{"line":1,"column":290}},{"source":"scripts/types.ts","name":null,"original":{"line":28,"column":11},"generated":{"line":1,"column":296}}],"sources":{"scripts/types.ts":"export const enum BlockType {\r\n    WALL = 'WALL',\r\n    WINDOW = 'WINDOW'\r\n}\r\n\r\nexport interface Point {\r\n    row: number\r\n    column: number\r\n}\r\n\r\nexport interface GameState {\r\n    clicked: number\r\n    fed: number\r\n    catPosition: Point\r\n    windowsCoordinates: Array<Point>,\r\n    field: BlockType[][]\r\n}\r\n\r\n\r\nexport const state: GameState = {\r\n    clicked: 0,\r\n    fed: 0,\r\n    catPosition: {\r\n        row: 0,\r\n        column: 0\r\n    },\r\n    windowsCoordinates: Array<Point>(),\r\n    field: []\r\n}"},"lineCount":null}},"error":null,"hash":"1773091843a81ac48e414d7e72340343","cacheData":{"env":{}}}