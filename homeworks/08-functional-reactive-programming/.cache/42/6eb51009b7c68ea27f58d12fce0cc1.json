{"id":"cqCB","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\subscribeOn.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\subscribeOn.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\subscribeOn.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.subscribeOn=r;var e=require(\"../util/lift\");function r(r,t){return void 0===t&&(t=0),(0,e.operate)(function(e,u){u.add(r.schedule(function(){return e.subscribe(u)},t))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":90}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":6},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":16},"generated":{"line":1,"column":129}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":31},"generated":{"line":1,"column":131}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":57},"generated":{"line":1,"column":133}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":65,"column":9},"generated":{"line":1,"column":136}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":57},"generated":{"line":1,"column":148}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":57},"generated":{"line":1,"column":152}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":57},"generated":{"line":1,"column":156}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":64,"column":57},"generated":{"line":1,"column":158}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":65,"column":9},"generated":{"line":1,"column":162}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":65,"column":17},"generated":{"line":1,"column":164}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":65,"column":17},"generated":{"line":1,"column":166}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":65,"column":17},"generated":{"line":1,"column":175}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":65,"column":18},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":65,"column":26},"generated":{"line":1,"column":186}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":4},"generated":{"line":1,"column":189}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":15},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":19},"generated":{"line":1,"column":195}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":29},"generated":{"line":1,"column":197}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":38},"generated":{"line":1,"column":206}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":44},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":44},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":51},"generated":{"line":1,"column":226}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":61},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/operators/subscribeOn.ts","name":null,"original":{"line":66,"column":74},"generated":{"line":1,"column":240}}],"sources":{"../../../../src/internal/operators/subscribeOn.ts":"import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n *\n * Given the following code:\n *\n * ```ts\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3);\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 1\n * // 2\n * // 3\n * // 4\n * // 5\n * // 6\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n *\n * If we instead use the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emited by Observable `a`:\n *\n * ```ts\n * import { of, merge, asyncScheduler } from 'rxjs';\n * import { subscribeOn } from 'rxjs/operators';\n *\n * const a = of(1, 2, 3).pipe(subscribeOn(asyncScheduler));\n * const b = of(4, 5, 6);\n *\n * merge(a, b).subscribe(console.log);\n *\n * // Outputs\n * // 4\n * // 5\n * // 6\n * // 1\n * // 2\n * // 3\n * ```\n *\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param scheduler The {@link SchedulerLike} to perform subscription actions on.\n * @param delay A delay to pass to the scheduler to delay subscriptions\n * @return A function that returns an Observable modified so that its\n * subscriptions happen on the specified {@link SchedulerLike}.\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    subscriber.add(scheduler.schedule(() => source.subscribe(subscriber), delay));\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"ba7fec3a1da25da7c0ffda1ee11e2cc4","cacheData":{"env":{}}}