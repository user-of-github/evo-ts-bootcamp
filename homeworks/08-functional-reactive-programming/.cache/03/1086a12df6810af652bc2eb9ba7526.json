{"id":"gwDu","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\util\\lift.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"./isFunction","loc":{"line":1,"column":27},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.hasLift=r,exports.operate=e;var t=require(\"./isFunction\");function r(r){return(0,t.isFunction)(null==r?void 0:r.lift)}function e(t){return function(e){if(r(e))return e.lift(function(r){try{return t(r,this)}catch(e){this.error(e)}});throw new TypeError(\"Unable to lift unknown Observable type\")}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":84}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":104}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":108}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":110}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":9,"column":6},"generated":{"line":1,"column":134}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":9,"column":16},"generated":{"line":1,"column":143}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":9,"column":24},"generated":{"line":1,"column":145}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":1,"column":148}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":9},"generated":{"line":1,"column":155}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":1,"column":157}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":1,"column":159}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":1,"column":171}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":1,"column":177}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":26},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":20},"generated":{"line":1,"column":186}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":10,"column":28},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":17,"column":6},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":17,"column":16},"generated":{"line":1,"column":203}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":18,"column":2},"generated":{"line":1,"column":205}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":1,"column":208}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":20,"column":9},"generated":{"line":1,"column":215}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":20,"column":10},"generated":{"line":1,"column":224}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":21,"column":8},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":1,"column":232}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":235}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":22,"column":13},"generated":{"line":1,"column":242}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":22,"column":20},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":22,"column":25},"generated":{"line":1,"column":249}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":22,"column":56},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":23,"column":12},"generated":{"line":1,"column":261}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":24,"column":17},"generated":{"line":1,"column":265}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":24,"column":17},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":24,"column":22},"generated":{"line":1,"column":274}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":24,"column":36},"generated":{"line":1,"column":276}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":25,"column":10},"generated":{"line":1,"column":282}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":25,"column":17},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":1,"column":291}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":26,"column":15},"generated":{"line":1,"column":296}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":26,"column":21},"generated":{"line":1,"column":302}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":30,"column":10},"generated":{"line":1,"column":314}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":30,"column":14},"generated":{"line":1,"column":318}},{"source":"../../../../src/internal/util/lift.ts","name":null,"original":{"line":30,"column":24},"generated":{"line":1,"column":328}}],"sources":{"../../../../src/internal/util/lift.ts":"import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\nimport { isFunction } from './isFunction';\n\n/**\n * Used to determine if an object is an Observable with a lift function.\n */\nexport function hasLift(source: any): source is { lift: InstanceType<typeof Observable>['lift'] } {\n  return isFunction(source?.lift);\n}\n\n/**\n * Creates an `OperatorFunction`. Used to define operators throughout the library in a concise way.\n * @param init The logic to connect the liftedSource to the subscriber at the moment of subscription.\n */\nexport function operate<T, R>(\n  init: (liftedSource: Observable<T>, subscriber: Subscriber<R>) => (() => void) | void\n): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    if (hasLift(source)) {\n      return source.lift(function (this: Subscriber<R>, liftedSource: Observable<T>) {\n        try {\n          return init(liftedSource, this);\n        } catch (err) {\n          this.error(err);\n        }\n      });\n    }\n    throw new TypeError('Unable to lift unknown Observable type');\n  };\n}\n"},"lineCount":null}},"error":null,"hash":"84f2de0fd6ab20eb9e9d18056324801c","cacheData":{"env":{}}}