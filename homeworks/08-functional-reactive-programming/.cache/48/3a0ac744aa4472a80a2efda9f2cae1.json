{"id":"Svx6","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\fromEventPattern.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\observable\\fromEventPattern.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../Observable","loc":{"line":1,"column":27},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\fromEventPattern.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js"},{"name":"../util/isFunction","loc":{"line":2,"column":27},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\fromEventPattern.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"},{"name":"../util/mapOneOrManyArgs","loc":{"line":3,"column":33},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\fromEventPattern.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\mapOneOrManyArgs.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.fromEventPattern=t;var e=require(\"../Observable\"),r=require(\"../util/isFunction\"),n=require(\"../util/mapOneOrManyArgs\");function t(u,i,o){return o?t(u,i).pipe((0,n.mapOneOrManyArgs)(o)):new e.Observable(function(e){var n=function(){for(var r=[],n=0;n<arguments.length;n++)r[n]=arguments[n];return e.next(1===r.length?r[0]:r)},t=u(n);return(0,r.isFunction)(i)?function(){return i(n,t)}:void 0})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":156,"column":1},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":101}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":109}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":136}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":158}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":160}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":168}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":142,"column":6},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":142,"column":16},"generated":{"line":1,"column":205}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":143,"column":2},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":144,"column":2},"generated":{"line":1,"column":209}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":145,"column":2},"generated":{"line":1,"column":211}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":147,"column":6},"generated":{"line":1,"column":214}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":147,"column":6},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":11},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":31},"generated":{"line":1,"column":225}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":43},"generated":{"line":1,"column":227}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":58},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":63},"generated":{"line":1,"column":236}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":80},"generated":{"line":1,"column":238}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":80},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":148,"column":80},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":151,"column":9},"generated":{"line":1,"column":262}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":151,"column":13},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":151,"column":9},"generated":{"line":1,"column":268}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":151,"column":33},"generated":{"line":1,"column":279}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":151,"column":34},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":10},"generated":{"line":1,"column":291}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":10},"generated":{"line":1,"column":295}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":20},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":308}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":312}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":316}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":318}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":321}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":323}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":325}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":327}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":337}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":344}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":348}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":350}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":353}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":21},"generated":{"line":1,"column":363}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":35},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":35},"generated":{"line":1,"column":373}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":46},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":64},"generated":{"line":1,"column":380}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":51},"generated":{"line":1,"column":384}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":53},"generated":{"line":1,"column":386}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":68},"generated":{"line":1,"column":393}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":70},"generated":{"line":1,"column":395}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":152,"column":75},"generated":{"line":1,"column":398}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":153,"column":10},"generated":{"line":1,"column":402}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":153,"column":21},"generated":{"line":1,"column":404}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":153,"column":32},"generated":{"line":1,"column":406}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":11},"generated":{"line":1,"column":409}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":11},"generated":{"line":1,"column":416}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":22},"generated":{"line":1,"column":418}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":22},"generated":{"line":1,"column":420}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":22},"generated":{"line":1,"column":432}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":39},"generated":{"line":1,"column":435}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":45},"generated":{"line":1,"column":446}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":45},"generated":{"line":1,"column":453}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":59},"generated":{"line":1,"column":455}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":68},"generated":{"line":1,"column":457}},{"source":"../../../../src/internal/observable/fromEventPattern.ts","name":null,"original":{"line":154,"column":80},"generated":{"line":1,"column":466}}],"sources":{"../../../../src/internal/observable/fromEventPattern.ts":"import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void\n): Observable<T>;\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * than one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n */\nexport function fromEventPattern<T>(\n  addHandler: (handler: NodeEventHandler) => any,\n  removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n  resultSelector?: (...args: any[]) => T\n): Observable<T | T[]> {\n  if (resultSelector) {\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(mapOneOrManyArgs(resultSelector));\n  }\n\n  return new Observable<T | T[]>((subscriber) => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n    const retValue = addHandler(handler);\n    return isFunction(removeHandler) ? () => removeHandler(handler, retValue) : undefined;\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"05a9c8a97ddaa06df9157adf244208aa","cacheData":{"env":{}}}