{"id":"kKa0","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\observeOn.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\observeOn.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\observeOn.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\observeOn.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.observeOn=t;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(t,n){return void 0===n&&(n=0),(0,e.operate)(function(e,u){e.subscribe(new r.OperatorSubscriber(u,function(e){return u.add(t.schedule(function(){return u.next(e)},n))},function(){return u.add(t.schedule(function(){return u.complete()},n))},function(e){return u.add(t.schedule(function(){return u.error(e)},n))}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":68,"column":1},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":118}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":128}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":1,"column":152}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":1,"column":161}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":29},"generated":{"line":1,"column":163}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":55},"generated":{"line":1,"column":165}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":168}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":55},"generated":{"line":1,"column":180}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":55},"generated":{"line":1,"column":184}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":55},"generated":{"line":1,"column":188}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":57,"column":55},"generated":{"line":1,"column":190}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":198}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":1,"column":207}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":58,"column":18},"generated":{"line":1,"column":216}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":1,"column":218}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":59,"column":4},"generated":{"line":1,"column":221}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":59,"column":11},"generated":{"line":1,"column":223}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":60,"column":6},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":60,"column":10},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":60,"column":6},"generated":{"line":1,"column":239}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":61,"column":8},"generated":{"line":1,"column":258}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":1,"column":260}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":9},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":19},"generated":{"line":1,"column":272}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":19},"generated":{"line":1,"column":279}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":30},"generated":{"line":1,"column":281}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":34},"generated":{"line":1,"column":285}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":44},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":53},"generated":{"line":1,"column":296}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":59},"generated":{"line":1,"column":307}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":59},"generated":{"line":1,"column":314}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":70},"generated":{"line":1,"column":316}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":75},"generated":{"line":1,"column":321}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":62,"column":83},"generated":{"line":1,"column":325}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":330}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":14},"generated":{"line":1,"column":341}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":14},"generated":{"line":1,"column":348}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":25},"generated":{"line":1,"column":350}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":29},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":39},"generated":{"line":1,"column":356}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":48},"generated":{"line":1,"column":365}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":1,"column":376}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":54},"generated":{"line":1,"column":383}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":65},"generated":{"line":1,"column":385}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":63,"column":77},"generated":{"line":1,"column":397}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":8},"generated":{"line":1,"column":402}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":9},"generated":{"line":1,"column":411}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":17},"generated":{"line":1,"column":414}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":17},"generated":{"line":1,"column":421}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":28},"generated":{"line":1,"column":423}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":32},"generated":{"line":1,"column":427}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":42},"generated":{"line":1,"column":429}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":51},"generated":{"line":1,"column":438}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":57},"generated":{"line":1,"column":449}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":57},"generated":{"line":1,"column":456}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":68},"generated":{"line":1,"column":458}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":74},"generated":{"line":1,"column":464}},{"source":"../../../../src/internal/operators/observeOn.ts","name":null,"original":{"line":64,"column":80},"generated":{"line":1,"column":468}}],"sources":{"../../../../src/internal/operators/observeOn.ts":"import { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n *\n * Ensure values in subscribe are called just before browser repaint.\n *\n * ```ts\n * import { interval, animationFrameScheduler } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const someDiv = document.querySelector(\"#someDiv\");\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return A function that returns an Observable that emits the same\n * notifications as the source Observable, but with provided scheduler.\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return operate((source, subscriber) => {\n    source.subscribe(\n      new OperatorSubscriber(\n        subscriber,\n        (value) => subscriber.add(scheduler.schedule(() => subscriber.next(value), delay)),\n        () => subscriber.add(scheduler.schedule(() => subscriber.complete(), delay)),\n        (err) => subscriber.add(scheduler.schedule(() => subscriber.error(err), delay))\n      )\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"38351ecbbf5817a9abb2350802ff8bd0","cacheData":{"env":{}}}