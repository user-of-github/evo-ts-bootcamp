{"id":"../node_modules/rxjs/dist/esm5/internal/operators/combineLatestAll.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\combineLatestAll.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\combineLatestAll.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621875871998},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../observable/combineLatest","loc":{"line":1,"column":30},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\combineLatestAll.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\combineLatest.js"},{"name":"./joinAllInternals","loc":{"line":2,"column":33},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\combineLatestAll.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\joinAllInternals.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.combineLatestAll = combineLatestAll;\n\nvar _combineLatest = require(\"../observable/combineLatest\");\n\nvar _joinAllInternals = require(\"./joinAllInternals\");\n\nfunction combineLatestAll(project) {\n  return (0, _joinAllInternals.joinAllInternals)(_combineLatest.combineLatest, project);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":12,"column":25}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":57,"column":36},"generated":{"line":12,"column":26}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":57,"column":6},"generated":{"line":12,"column":33}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":57,"column":74},"generated":{"line":12,"column":35}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":58,"column":26},"generated":{"line":13,"column":49}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":13,"column":77}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":58,"column":41},"generated":{"line":13,"column":79}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":13,"column":86}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":13,"column":87}},{"source":"../../../../src/internal/operators/combineLatestAll.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../../../../src/internal/operators/combineLatestAll.ts":"import { combineLatest } from '../observable/combineLatest';\nimport { OperatorFunction, ObservableInput } from '../types';\nimport { joinAllInternals } from './joinAllInternals';\n\nexport function combineLatestAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineLatestAll<T>(): OperatorFunction<any, T[]>;\nexport function combineLatestAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineLatestAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * ![](combineLatestAll.png)\n *\n * `combineLatestAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest}</a> strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ---\n *\n * ## Examples\n *\n * ### Map two click events to a finite interval Observable, then apply `combineLatestAll`\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, combineLatestAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev =>\n *      interval(Math.random() * 2000).pipe(take(3))\n *   ),\n *   take(2)\n * );\n * const result = higherOrder.pipe(\n *   combineLatestAll()\n * );\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link combineLatestWith}\n * @see {@link mergeAll}\n *\n * @param project optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return A function that returns an Observable that flattens Observables\n * emitted by the source Observable.\n */\nexport function combineLatestAll<R>(project?: (...values: Array<any>) => R) {\n  return joinAllInternals(combineLatest, project);\n}\n"},"lineCount":null}},"error":null,"hash":"24bcf4510db94ab3d8a2cdcfd6fc7052","cacheData":{"env":{}}}