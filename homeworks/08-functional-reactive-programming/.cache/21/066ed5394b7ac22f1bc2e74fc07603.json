{"id":"N8Yl","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\map.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\map.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\map.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\map.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.map=t;var e=require(\"../util/lift\"),r=require(\"./OperatorSubscriber\");function t(t,u){return(0,e.operate)(function(e,i){var n=0;e.subscribe(new r.OperatorSubscriber(i,function(e){i.next(t.call(u,e,n++))}))})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":60,"column":1},"generated":{"line":1,"column":80}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":82}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":88}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":112}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":114}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":1,"column":122}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":1,"column":146}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":1,"column":155}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":46,"column":26},"generated":{"line":1,"column":157}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":46,"column":67},"generated":{"line":1,"column":159}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":1,"column":162}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":1,"column":169}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":1,"column":171}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":1,"column":182}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":47,"column":18},"generated":{"line":1,"column":191}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":1,"column":193}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":1,"column":200}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":49,"column":16},"generated":{"line":1,"column":202}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":52,"column":4},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":52,"column":11},"generated":{"line":1,"column":206}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":216}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":53,"column":10},"generated":{"line":1,"column":220}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":53,"column":6},"generated":{"line":1,"column":222}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":53,"column":29},"generated":{"line":1,"column":241}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":53,"column":41},"generated":{"line":1,"column":243}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":53,"column":42},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":1,"column":255}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":56,"column":19},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":56,"column":24},"generated":{"line":1,"column":262}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":56,"column":32},"generated":{"line":1,"column":264}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":56,"column":37},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":56,"column":46},"generated":{"line":1,"column":271}},{"source":"../../../../src/internal/operators/map.ts","name":null,"original":{"line":56,"column":53},"generated":{"line":1,"column":273}}],"sources":{"../../../../src/internal/operators/map.ts":"import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\nexport function map<T, R>(project: (value: T, index: number) => R): OperatorFunction<T, R>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function map<T, R, A>(project: (this: A, value: T, index: number) => R, thisArg: A): OperatorFunction<T, R>;\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return A function that returns an Observable that emits the values from the\n * source Observable transformed by the given `project` function.\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return operate((source, subscriber) => {\n    // The index of the value from the source. Used with projection.\n    let index = 0;\n    // Subscribe to the source, all errors and completions are sent along\n    // to the consumer.\n    source.subscribe(\n      new OperatorSubscriber(subscriber, (value: T) => {\n        // Call the projection function with the appropriate this context,\n        // and send the resulting value to the consumer.\n        subscriber.next(project.call(thisArg, value, index++));\n      })\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"f794e5f16f5625687b0c2e9d860edcdc","cacheData":{"env":{}}}