{"id":"../node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\pairwise.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\pairwise.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621875871998},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\pairwise.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./OperatorSubscriber","loc":{"line":2,"column":35},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\pairwise.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\OperatorSubscriber.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pairwise = pairwise;\n\nvar _lift = require(\"../util/lift\");\n\nvar _OperatorSubscriber = require(\"./OperatorSubscriber\");\n\nfunction pairwise() {\n  return (0, _lift.operate)(function (source, subscriber) {\n    var prev;\n    var hasPrev = false;\n    source.subscribe(new _OperatorSubscriber.OperatorSubscriber(subscriber, function (value) {\n      var p = prev;\n      prev = value;\n      hasPrev && subscriber.next([p, value]);\n      hasPrev = true;\n    }));\n  });\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":46,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":46,"column":6},"generated":{"line":12,"column":17}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":46,"column":24},"generated":{"line":12,"column":20}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":13,"column":28}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":18},"generated":{"line":13,"column":38}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":13,"column":44}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":26},"generated":{"line":13,"column":46}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":17},"generated":{"line":13,"column":56}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":36},"generated":{"line":13,"column":58}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":48,"column":8},"generated":{"line":14,"column":8}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":48,"column":4},"generated":{"line":14,"column":12}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":15,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":49,"column":8},"generated":{"line":15,"column":8}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":49,"column":15},"generated":{"line":15,"column":15}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":49,"column":18},"generated":{"line":15,"column":18}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":49,"column":4},"generated":{"line":15,"column":23}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":16,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":16,"column":4}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":10},"generated":{"line":16,"column":10}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":11},"generated":{"line":16,"column":11}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":16,"column":20}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":16,"column":21}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":10},"generated":{"line":16,"column":25}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":16,"column":63}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":29},"generated":{"line":16,"column":64}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":16,"column":74}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":16,"column":76}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":42},"generated":{"line":16,"column":86}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":41},"generated":{"line":16,"column":91}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":47},"generated":{"line":16,"column":93}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":17,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":14},"generated":{"line":17,"column":10}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":15},"generated":{"line":17,"column":11}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":18},"generated":{"line":17,"column":14}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":52,"column":8},"generated":{"line":17,"column":18}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":18,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":18,"column":6}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":53,"column":12},"generated":{"line":18,"column":10}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":53,"column":15},"generated":{"line":18,"column":13}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":53,"column":8},"generated":{"line":18,"column":18}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":19,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":19,"column":6}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":15},"generated":{"line":19,"column":13}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":19,"column":17}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":29},"generated":{"line":19,"column":27}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":30},"generated":{"line":19,"column":28}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":19,"column":32}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":35},"generated":{"line":19,"column":33}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":36},"generated":{"line":19,"column":34}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":35},"generated":{"line":19,"column":35}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":39},"generated":{"line":19,"column":37}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":35},"generated":{"line":19,"column":42}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":19},"generated":{"line":19,"column":43}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":54,"column":8},"generated":{"line":19,"column":44}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":20,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":20,"column":6}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":20,"column":13}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":55,"column":18},"generated":{"line":20,"column":16}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":55,"column":8},"generated":{"line":20,"column":20}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":56,"column":7},"generated":{"line":21,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":51,"column":6},"generated":{"line":21,"column":5}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":50,"column":4},"generated":{"line":21,"column":6}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":58,"column":3},"generated":{"line":22,"column":0}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":9},"generated":{"line":22,"column":3}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":47,"column":2},"generated":{"line":22,"column":4}},{"source":"../../../../src/internal/operators/pairwise.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":23,"column":0}}],"sources":{"../../../../src/internal/operators/pairwise.ts":"import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { OperatorSubscriber } from './OperatorSubscriber';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return A function that returns an Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return operate((source, subscriber) => {\n    let prev: T;\n    let hasPrev = false;\n    source.subscribe(\n      new OperatorSubscriber(subscriber, (value) => {\n        const p = prev;\n        prev = value;\n        hasPrev && subscriber.next([p, value]);\n        hasPrev = true;\n      })\n    );\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"e42923571a17dd5e5715d10048c69714","cacheData":{"env":{}}}