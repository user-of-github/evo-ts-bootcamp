{"id":"../node_modules/rxjs/dist/esm5/internal/observable/partition.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\observable\\partition.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../util/not","loc":{"line":1,"column":20},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\not.js"},{"name":"../operators/filter","loc":{"line":2,"column":23},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\filter.js"},{"name":"./from","loc":{"line":3,"column":26},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\partition.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\from.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.partition = partition;\n\nvar _not = require(\"../util/not\");\n\nvar _filter = require(\"../operators/filter\");\n\nvar _from = require(\"./from\");\n\nfunction partition(source, predicate, thisArg) {\n  return [(0, _filter.filter)(predicate, thisArg)((0, _from.innerFrom)(source)), (0, _filter.filter)((0, _not.not)(predicate, thisArg))((0, _from.innerFrom)(source))];\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":77,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":77,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":77,"column":6},"generated":{"line":14,"column":18}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":78,"column":2},"generated":{"line":14,"column":19}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":77,"column":6},"generated":{"line":14,"column":25}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":79,"column":2},"generated":{"line":14,"column":27}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":77,"column":6},"generated":{"line":14,"column":36}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":80,"column":2},"generated":{"line":14,"column":38}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":77,"column":6},"generated":{"line":14,"column":45}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":80,"column":15},"generated":{"line":14,"column":47}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":15,"column":0}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":9},"generated":{"line":15,"column":9}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":15,"column":10}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":17},"generated":{"line":15,"column":30}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":15,"column":39}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":28},"generated":{"line":15,"column":41}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":15,"column":48}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":37},"generated":{"line":15,"column":50}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":47},"generated":{"line":15,"column":71}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":37},"generated":{"line":15,"column":77}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":10},"generated":{"line":15,"column":78}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":9},"generated":{"line":15,"column":79}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":57},"generated":{"line":15,"column":81}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":64},"generated":{"line":15,"column":101}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":68},"generated":{"line":15,"column":115}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":64},"generated":{"line":15,"column":124}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":79},"generated":{"line":15,"column":126}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":64},"generated":{"line":15,"column":133}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":57},"generated":{"line":15,"column":134}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":89},"generated":{"line":15,"column":136}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":99},"generated":{"line":15,"column":157}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":89},"generated":{"line":15,"column":163}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":57},"generated":{"line":15,"column":164}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":9},"generated":{"line":15,"column":165}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":82,"column":2},"generated":{"line":15,"column":166}},{"source":"../../../../src/internal/observable/partition.ts","name":null,"original":{"line":86,"column":1},"generated":{"line":16,"column":0}}],"sources":{"../../../../src/internal/observable/partition.ts":"import { not } from '../util/not';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\nimport { innerFrom } from './from';\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, U extends T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => value is U,\n  thisArg: A\n): [Observable<U>, Observable<Exclude<T, U>>];\nexport function partition<T, U extends T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => value is U\n): [Observable<U>, Observable<Exclude<T, U>>];\n\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function partition<T, A>(\n  source: ObservableInput<T>,\n  predicate: (this: A, value: T, index: number) => boolean,\n  thisArg: A\n): [Observable<T>, Observable<T>];\nexport function partition<T>(source: ObservableInput<T>, predicate: (value: T, index: number) => boolean): [Observable<T>, Observable<T>];\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (this: any, value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [filter(predicate, thisArg)(innerFrom(source)), filter(not(predicate, thisArg))(innerFrom(source))] as [\n    Observable<T>,\n    Observable<T>\n  ];\n}\n"},"lineCount":null}},"error":null,"hash":"0978f265d2d494498332f0fde99be2f4","cacheData":{"env":{}}}