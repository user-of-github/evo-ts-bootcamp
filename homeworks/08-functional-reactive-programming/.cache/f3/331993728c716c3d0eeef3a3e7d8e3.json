{"id":"qOvc","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\empty.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\observable\\empty.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../Observable","loc":{"line":1,"column":27},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\empty.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.empty=t,exports.EMPTY=void 0;var e=require(\"../Observable\"),r=new e.Observable(function(e){return e.complete()});function t(e){return e?n(e):r}function n(r){return new e.Observable(function(e){return r.schedule(function(){return e.complete()})})}exports.EMPTY=r;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":82}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":84}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":92}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":103}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":105}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":109}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":111}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":1,"column":119}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":13},"generated":{"line":1,"column":136}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":21},"generated":{"line":1,"column":138}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":25},"generated":{"line":1,"column":142}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":21},"generated":{"line":1,"column":144}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":43},"generated":{"line":1,"column":155}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":44},"generated":{"line":1,"column":164}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":59},"generated":{"line":1,"column":167}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":59},"generated":{"line":1,"column":174}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":28,"column":70},"generated":{"line":1,"column":176}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":87,"column":6},"generated":{"line":1,"column":189}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":87,"column":16},"generated":{"line":1,"column":198}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":87,"column":22},"generated":{"line":1,"column":200}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":88,"column":9},"generated":{"line":1,"column":203}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":88,"column":9},"generated":{"line":1,"column":210}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":88,"column":21},"generated":{"line":1,"column":212}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":88,"column":36},"generated":{"line":1,"column":214}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":88,"column":49},"generated":{"line":1,"column":217}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":91,"column":0},"generated":{"line":1,"column":219}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":91,"column":9},"generated":{"line":1,"column":228}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":1,"column":230}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":9},"generated":{"line":1,"column":233}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":9},"generated":{"line":1,"column":240}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":13},"generated":{"line":1,"column":244}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":9},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":31},"generated":{"line":1,"column":257}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":32},"generated":{"line":1,"column":266}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":47},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":47},"generated":{"line":1,"column":276}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":57},"generated":{"line":1,"column":278}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":66},"generated":{"line":1,"column":287}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":72},"generated":{"line":1,"column":298}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":72},"generated":{"line":1,"column":305}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":92,"column":83},"generated":{"line":1,"column":307}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":322}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":330}},{"source":"../../../../src/internal/observable/empty.ts","name":null,"original":{"line":93,"column":1},"generated":{"line":1,"column":336}}],"sources":{"../../../../src/internal/observable/empty.ts":"import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferable to use this over `empty()`.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * ## Examples\n *\n * ### Log complete notification\n *\n * ```ts\n * import { EMPTY } from 'rxjs';\n *\n * EMPTY.subscribe({\n *   next: () => console.log('Next'),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Outputs\n * // Complete!\n * ```\n */\nexport const EMPTY = new Observable<never>((subscriber) => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.</span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n *\n * ### Emit the number 7, then complete\n *\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n *\n * // Outputs\n * // 7\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n *\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval, e.g. (0, 1, 2, 3, ...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1, print a, b, c (each on its own)\n * // if x % 2 is not equal to 1, nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Replaced with the {@link EMPTY} constant or {@link scheduled} (e.g. `scheduled([], scheduler)`). Will be removed in v8.\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>((subscriber) => scheduler.schedule(() => subscriber.complete()));\n}\n"},"lineCount":null}},"error":null,"hash":"2dda045353bc0ef1820885b0364b207c","cacheData":{"env":{}}}