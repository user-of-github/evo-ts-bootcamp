{"id":"CqFZ","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\lastValueFrom.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\lastValueFrom.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"./util/EmptyError","loc":{"line":1,"column":27},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\lastValueFrom.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\EmptyError.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.lastValueFrom=r;var e=require(\"./util/EmptyError\");function r(r,t){var o=\"object\"==typeof t;return new Promise(function(u,n){var i,c=!1;r.subscribe({next:function(e){i=e,c=!0},error:n,complete:function(){c?u(i):o?u(t.defaultValue):n(new e.EmptyError)}})})}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":77,"column":1},"generated":{"line":1,"column":90}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":106}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":55,"column":6},"generated":{"line":1,"column":127}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":55,"column":16},"generated":{"line":1,"column":136}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":55,"column":36},"generated":{"line":1,"column":138}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":55,"column":59},"generated":{"line":1,"column":140}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":1,"column":143}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":1,"column":147}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":56,"column":38},"generated":{"line":1,"column":149}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":56,"column":27},"generated":{"line":1,"column":166}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":1,"column":168}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":57,"column":9},"generated":{"line":1,"column":175}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":1,"column":179}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":57,"column":28},"generated":{"line":1,"column":187}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":57,"column":29},"generated":{"line":1,"column":196}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":57,"column":38},"generated":{"line":1,"column":198}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":1,"column":201}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":59,"column":8},"generated":{"line":1,"column":205}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":58,"column":8},"generated":{"line":1,"column":207}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":58,"column":20},"generated":{"line":1,"column":210}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":60,"column":4},"generated":{"line":1,"column":212}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":60,"column":11},"generated":{"line":1,"column":214}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":60,"column":21},"generated":{"line":1,"column":224}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":61,"column":6},"generated":{"line":1,"column":225}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":61,"column":12},"generated":{"line":1,"column":230}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":61,"column":13},"generated":{"line":1,"column":239}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":62,"column":8},"generated":{"line":1,"column":242}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":62,"column":17},"generated":{"line":1,"column":244}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":63,"column":8},"generated":{"line":1,"column":246}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":63,"column":20},"generated":{"line":1,"column":249}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":65,"column":6},"generated":{"line":1,"column":252}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":65,"column":13},"generated":{"line":1,"column":258}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":66,"column":6},"generated":{"line":1,"column":260}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":66,"column":16},"generated":{"line":1,"column":269}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":67,"column":12},"generated":{"line":1,"column":280}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":68,"column":10},"generated":{"line":1,"column":282}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":68,"column":18},"generated":{"line":1,"column":284}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":69,"column":19},"generated":{"line":1,"column":287}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":70,"column":10},"generated":{"line":1,"column":289}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":70,"column":18},"generated":{"line":1,"column":291}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":70,"column":26},"generated":{"line":1,"column":293}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":72,"column":10},"generated":{"line":1,"column":307}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":72,"column":17},"generated":{"line":1,"column":309}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":72,"column":21},"generated":{"line":1,"column":313}},{"source":"../../../src/internal/lastValueFrom.ts","name":null,"original":{"line":72,"column":17},"generated":{"line":1,"column":315}}],"sources":{"../../../src/internal/lastValueFrom.ts":"import { Observable } from './Observable';\nimport { EmptyError } from './util/EmptyError';\n\nexport interface LastValueFromConfig<T> {\n  defaultValue: T;\n}\n\nexport function lastValueFrom<T, D>(source: Observable<T>, config: LastValueFromConfig<D>): Promise<T | D>;\nexport function lastValueFrom<T>(source: Observable<T>): Promise<T>;\n\n/**\n * Converts an observable to a promise by subscribing to the observable,\n * waiting for it to complete, and resolving the returned promise with the\n * last value from the observed stream.\n *\n * If the observable stream completes before any values were emitted, the\n * returned promise will reject with {@link EmptyError} or will resolve\n * with the default value if a default was specified.\n *\n * If the observable stream emits an error, the returned promise will reject\n * with that error.\n *\n * **WARNING**: Only use this with observables you *know* will complete. If the source\n * observable does not complete, you will end up with a promise that is hung up, and\n * potentially all of the state of an async function hanging out in memory. To avoid\n * this situation, look into adding something like {@link timeout}, {@link take},\n * {@link takeWhile}, or {@link takeUntil} amongst others.\n *\n * ### Example\n *\n * Wait for the last value from a stream and emit it from a promise in\n * an async function.\n *\n * ```ts\n * import { interval, lastValueFrom } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * async function execute() {\n *   const source$ = interval(2000).pipe(take(10));\n *   const finalNumber = await lastValueFrom(source$);\n *   console.log(`The final number is ${finalNumber}`);\n * }\n *\n * execute();\n *\n * // Expected output:\n * // \"The final number is 9\"\n * ```\n *\n * @see {@link firstValueFrom}\n *\n * @param source the observable to convert to a promise\n * @param config a configuration object to define the `defaultValue` to use if the source completes without emitting a value\n */\nexport function lastValueFrom<T, D>(source: Observable<T>, config?: LastValueFromConfig<D>): Promise<T | D> {\n  const hasConfig = typeof config === 'object';\n  return new Promise<T | D>((resolve, reject) => {\n    let _hasValue = false;\n    let _value: T;\n    source.subscribe({\n      next: (value) => {\n        _value = value;\n        _hasValue = true;\n      },\n      error: reject,\n      complete: () => {\n        if (_hasValue) {\n          resolve(_value);\n        } else if (hasConfig) {\n          resolve(config!.defaultValue);\n        } else {\n          reject(new EmptyError());\n        }\n      },\n    });\n  });\n}\n"},"lineCount":null}},"error":null,"hash":"cac994233039785dd65c9d179926ebbe","cacheData":{"env":{}}}