{"id":"qMuK","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\observable\\generate.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"tslib","loc":{"line":1,"column":28},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\tslib\\tslib.es6.js"},{"name":"../util/identity","loc":{"line":2,"column":25},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\identity.js"},{"name":"../util/isScheduler","loc":{"line":3,"column":28},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isScheduler.js"},{"name":"./defer","loc":{"line":4,"column":22},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\defer.js"},{"name":"../scheduled/scheduleIterable","loc":{"line":5,"column":33},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\generate.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\scheduled\\scheduleIterable.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.generate=n;var e=require(\"tslib\"),r=require(\"../util/identity\"),t=require(\"../util/isScheduler\"),i=require(\"./defer\"),u=require(\"../scheduled/scheduleIterable\");function n(n,l,s,c,a){var d,o,h,b;function f(){var r;return(0,e.__generator)(this,function(e){switch(e.label){case 0:r=b,e.label=1;case 1:return l&&!l(r)?[3,4]:[4,h(r)];case 2:e.sent(),e.label=3;case 3:return r=s(r),[3,1];case 4:return[2]}})}return 1===arguments.length?(b=(d=n).initialState,l=d.condition,s=d.iterate,o=d.resultSelector,h=void 0===o?r.identity:o,a=d.scheduler):(b=n,!c||(0,t.isScheduler)(c)?(h=r.identity,a=c):h=c),(0,i.defer)(a?function(){return(0,u.scheduleIterable)(f(),a)}:f)}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":85}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":87}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":91}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":93}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":101}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":110}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":112}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":1,"column":120}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":140}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":142}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":1,"column":150}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":173}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":175}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":183}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":194}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":196}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":204}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":334,"column":6},"generated":{"line":1,"column":237}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":334,"column":16},"generated":{"line":1,"column":246}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":335,"column":2},"generated":{"line":1,"column":248}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":336,"column":2},"generated":{"line":1,"column":250}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":337,"column":2},"generated":{"line":1,"column":252}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":338,"column":2},"generated":{"line":1,"column":254}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":339,"column":2},"generated":{"line":1,"column":256}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":259}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":263}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":265}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":341,"column":6},"generated":{"line":1,"column":267}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":342,"column":6},"generated":{"line":1,"column":269}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":12},"generated":{"line":1,"column":271}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":369,"column":12},"generated":{"line":1,"column":280}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":284}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":288}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":290}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":297}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":299}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":301}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":314}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":319}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":328}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":331}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":338}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":340}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":347}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":352}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":13},"generated":{"line":1,"column":354}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":21},"generated":{"line":1,"column":356}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":358}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":360}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":366}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":368}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":373}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":35},"generated":{"line":1,"column":375}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":36},"generated":{"line":1,"column":382}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":49},"generated":{"line":1,"column":386}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":59},"generated":{"line":1,"column":388}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":65},"generated":{"line":1,"column":391}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":65},"generated":{"line":1,"column":392}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":65},"generated":{"line":1,"column":394}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":371,"column":6},"generated":{"line":1,"column":397}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":371,"column":6},"generated":{"line":1,"column":398}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":371,"column":12},"generated":{"line":1,"column":400}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":371,"column":27},"generated":{"line":1,"column":402}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":406}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":411}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":371,"column":6},"generated":{"line":1,"column":413}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":371,"column":6},"generated":{"line":1,"column":415}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":422}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":424}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":430}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":432}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":437}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":439}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":67},"generated":{"line":1,"column":446}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":75},"generated":{"line":1,"column":448}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":370,"column":84},"generated":{"line":1,"column":450}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":453}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":454}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":456}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":459}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":464}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":466}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":472}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":385,"column":1},"generated":{"line":1,"column":473}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":376,"column":9},"generated":{"line":1,"column":479}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":346,"column":27},"generated":{"line":1,"column":486}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":346,"column":6},"generated":{"line":1,"column":490}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":346,"column":16},"generated":{"line":1,"column":500}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":350,"column":6},"generated":{"line":1,"column":508}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":349,"column":5},"generated":{"line":1,"column":511}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":355,"column":8},"generated":{"line":1,"column":513}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":350,"column":18},"generated":{"line":1,"column":516}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":6},"generated":{"line":1,"column":529}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":15},"generated":{"line":1,"column":531}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":351,"column":15},"generated":{"line":1,"column":533}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":6},"generated":{"line":1,"column":543}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":13},"generated":{"line":1,"column":545}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":352,"column":13},"generated":{"line":1,"column":547}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":6},"generated":{"line":1,"column":555}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":6},"generated":{"line":1,"column":557}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":6},"generated":{"line":1,"column":559}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":6},"generated":{"line":1,"column":574}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":20},"generated":{"line":1,"column":581}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":20},"generated":{"line":1,"column":585}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":23},"generated":{"line":1,"column":587}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":20},"generated":{"line":1,"column":589}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":353,"column":51},"generated":{"line":1,"column":598}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":354,"column":6},"generated":{"line":1,"column":600}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":354,"column":15},"generated":{"line":1,"column":602}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":354,"column":15},"generated":{"line":1,"column":604}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":4},"generated":{"line":1,"column":616}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":359,"column":19},"generated":{"line":1,"column":618}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":9},"generated":{"line":1,"column":621}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":38},"generated":{"line":1,"column":625}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":50},"generated":{"line":1,"column":627}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":50},"generated":{"line":1,"column":629}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":360,"column":50},"generated":{"line":1,"column":642}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":361,"column":6},"generated":{"line":1,"column":646}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":361,"column":23},"generated":{"line":1,"column":648}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":361,"column":6},"generated":{"line":1,"column":650}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":362,"column":6},"generated":{"line":1,"column":659}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":362,"column":18},"generated":{"line":1,"column":661}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":364,"column":6},"generated":{"line":1,"column":664}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":364,"column":23},"generated":{"line":1,"column":666}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":376,"column":9},"generated":{"line":1,"column":670}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":377,"column":5},"generated":{"line":1,"column":672}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":377,"column":5},"generated":{"line":1,"column":674}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":377,"column":5},"generated":{"line":1,"column":681}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":380,"column":8},"generated":{"line":1,"column":683}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":380,"column":14},"generated":{"line":1,"column":694}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":380,"column":14},"generated":{"line":1,"column":701}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":380,"column":31},"generated":{"line":1,"column":703}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":380,"column":31},"generated":{"line":1,"column":705}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":380,"column":31},"generated":{"line":1,"column":723}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":380,"column":38},"generated":{"line":1,"column":727}},{"source":"../../../../src/internal/observable/generate.ts","name":null,"original":{"line":383,"column":8},"generated":{"line":1,"column":731}}],"sources":{"../../../../src/internal/observable/generate.ts":"import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { ObservableInput, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { defer } from './defer';\nimport { scheduleIterable } from '../scheduled/scheduleIterable';\n\ntype ConditionFunc<S> = (state: S) => boolean;\ntype IterateFunc<S> = (state: S) => S;\ntype ResultFunc<S, T> = (state: S) => T;\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * ### Produces sequences of number\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * ```\n *\n * ### Use asap scheduler\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 2\n * // 3\n * // 5\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<T, S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  resultSelector: ResultFunc<S, T>,\n  scheduler?: SchedulerLike\n): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * ![](generate.png)\n *\n * `generate` allows you to create a stream of values generated with a loop very similar to\n * a traditional for loop. The first argument of `generate` is a beginning value. The second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * then the loop continues, if not, it stops. The third value is a function which takes the\n * previously defined value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in a traditional for loop: the first expression\n * initializes some state (for example, a numeric index), the second tests if the loop can perform the next\n * iteration (for example, if the index is lower than 10) and the third states how the defined value\n * will be modified on every step (for example, the index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First of all, the condition function is ran. If it returns true, then the Observable\n * emits the currently stored value (initial value at the first iteration) and finally updates\n * that value with iterate function. If at some point the condition returns false, then the Observable\n * completes at that moment.\n *\n * Optionally you can pass a fourth parameter to `generate` - a result selector function which allows you\n * to immediately map the value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * a single object to the operator instead where the object has the properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, or in other words the resulting Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of a multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is a `resultSelector`\n * function or not). In case of a single-parameter call, you can provide it as a\n * `scheduler` property on the object passed to the operator. In both cases, a scheduler decides when\n * the next iteration of the loop will happen and therefore when the next value will be emitted\n * by the Observable. For example, to ensure that each value is pushed to the Observer\n * on a separate task in the event loop, you could use the `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * ## Examples\n *\n * ### Use with condition and iterate functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('Complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Complete!\"\n * ```\n *\n * ### Use with condition, iterate and resultSelector functions\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"complete!\"\n * ```\n *\n * ### Use with options object\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Complete!\"\n * ```\n *\n * ### Use options object without condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('complete!') // This will never run\n * });\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n * ```\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n * @deprecated Instead of passing separate arguments, use the options argument. Signatures taking separate arguments will be removed in v8.\n */\nexport function generate<S>(\n  initialState: S,\n  condition: ConditionFunc<S>,\n  iterate: IterateFunc<S>,\n  scheduler?: SchedulerLike\n): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * ### Use options object with condition function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Complete!\".\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * ## Examples\n *\n * ### Use options object with condition and iterate function\n *\n * ```ts\n * import { generate } from 'rxjs';\n *\n * const result = generate({\n *   initialState: 0,\n *   condition: x => x < 3,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * result.subscribe({\n *   next: value => console.log(value),\n *   complete: () => console.log('complete!')\n * });\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Complete!\".\n * ```\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(\n  initialStateOrOptions: S | GenerateOptions<T, S>,\n  condition?: ConditionFunc<S>,\n  iterate?: IterateFunc<S>,\n  resultSelectorOrScheduler?: ResultFunc<S, T> | SchedulerLike,\n  scheduler?: SchedulerLike\n): Observable<T> {\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  // TODO: Remove this as we move away from deprecated signatures\n  // and move towards a configuration object argument.\n  if (arguments.length === 1) {\n    // If we only have one argument, we can assume it is a configuration object.\n    // Note that folks not using TypeScript may trip over this.\n    ({\n      initialState,\n      condition,\n      iterate,\n      resultSelector = identity as ResultFunc<S, T>,\n      scheduler,\n    } = initialStateOrOptions as GenerateOptions<T, S>);\n  } else {\n    // Deprecated arguments path. Figure out what the user\n    // passed and set it here.\n    initialState = initialStateOrOptions as S;\n    if (!resultSelectorOrScheduler || isScheduler(resultSelectorOrScheduler)) {\n      resultSelector = identity as ResultFunc<S, T>;\n      scheduler = resultSelectorOrScheduler as SchedulerLike;\n    } else {\n      resultSelector = resultSelectorOrScheduler as ResultFunc<S, T>;\n    }\n  }\n\n  // The actual generator used to \"generate\" values.\n  function* gen() {\n    for (let state = initialState; !condition || condition(state); state = iterate!(state)) {\n      yield resultSelector(state);\n    }\n  }\n\n  // We use `defer` because we want to defer the creation of the iterator from the iterable.\n  return defer(\n    (scheduler\n      ? // If a scheduler was provided, use `scheduleIterable` to ensure that iteration/generation\n        // happens on the scheduler.\n        () => scheduleIterable(gen(), scheduler!)\n      : // Otherwise, if there's no scheduler, we can just use the generator function directly in\n        // `defer` and executing it will return the generator (which is iterable).\n        gen) as () => ObservableInput<T>\n  );\n}\n"},"lineCount":null}},"error":null,"hash":"4e94ea5f0bee07e064cb3eed56526d3e","cacheData":{"env":{}}}