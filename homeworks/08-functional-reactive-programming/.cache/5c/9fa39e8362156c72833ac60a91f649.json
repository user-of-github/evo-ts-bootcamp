{"id":"../node_modules/rxjs/dist/esm5/internal/operators/findIndex.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\findIndex.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\operators\\findIndex.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621875871998},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"../util/lift","loc":{"line":1,"column":24},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\findIndex.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\lift.js"},{"name":"./find","loc":{"line":2,"column":27},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\findIndex.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\find.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findIndex = findIndex;\n\nvar _lift = require(\"../util/lift\");\n\nvar _find = require(\"./find\");\n\nfunction findIndex(predicate, thisArg) {\n  return (0, _lift.operate)((0, _find.createFind)(predicate, thisArg, 'index'));\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":54,"column":16},"generated":{"line":12,"column":9}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":12,"column":18}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":55,"column":2},"generated":{"line":12,"column":19}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":12,"column":28}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":56,"column":2},"generated":{"line":12,"column":30}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":54,"column":6},"generated":{"line":12,"column":37}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":12,"column":39}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":13,"column":0}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":13,"column":9}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":13,"column":28}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":28},"generated":{"line":13,"column":50}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":13,"column":59}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":39},"generated":{"line":13,"column":61}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":13,"column":68}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":48},"generated":{"line":13,"column":70}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":17},"generated":{"line":13,"column":77}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":9},"generated":{"line":13,"column":78}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":58,"column":2},"generated":{"line":13,"column":79}},{"source":"../../../../src/internal/operators/findIndex.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":14,"column":0}}],"sources":{"../../../../src/internal/operators/findIndex.ts":"import { Observable } from '../Observable';\nimport { Falsy, OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createFind } from './find';\n\nexport function findIndex<T>(predicate: BooleanConstructor): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T>(predicate: BooleanConstructor, thisArg: any): OperatorFunction<T, T extends Falsy ? -1 : number>;\n/** @deprecated Use a closure instead of a `thisArg`. Signatures accepting a `thisArg` will be removed in v8. */\nexport function findIndex<T, A>(\n  predicate: (this: A, value: T, index: number, source: Observable<T>) => boolean,\n  thisArg: A\n): OperatorFunction<T, number>;\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number>;\n\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { findIndex } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return A function that returns an Observable that emits the index of the\n * first item that matches the condition.\n */\nexport function findIndex<T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  thisArg?: any\n): OperatorFunction<T, number> {\n  return operate(createFind(predicate, thisArg, 'index'));\n}\n"},"lineCount":null}},"error":null,"hash":"b57a82e2e50ba4c73ac47c3274619dd8","cacheData":{"env":{}}}