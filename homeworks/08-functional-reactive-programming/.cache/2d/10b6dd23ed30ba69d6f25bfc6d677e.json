{"id":"EkNV","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\Observable.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"./Subscriber","loc":{"line":1,"column":43},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Subscriber.js"},{"name":"./Subscription","loc":{"line":2,"column":31},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Subscription.js"},{"name":"./symbol/observable","loc":{"line":3,"column":48},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\symbol\\observable.js"},{"name":"./util/pipe","loc":{"line":4,"column":30},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\pipe.js"},{"name":"./config","loc":{"line":5,"column":23},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\config.js"},{"name":"./util/isFunction","loc":{"line":6,"column":27},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\Observable.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\isFunction.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.Observable=void 0;var r=require(\"./Subscriber\"),e=require(\"./Subscription\"),t=require(\"./symbol/observable\"),i=require(\"./util/pipe\"),n=require(\"./config\"),o=require(\"./util/isFunction\"),s=function(){function e(r){r&&(this._subscribe=r)}return e.prototype.lift=function(r){var t=new e;return t.source=this,t.operator=r,t},e.prototype.subscribe=function(e,t,i){var o=b(e)?e:new r.SafeSubscriber(e,t,i);if(n.config.useDeprecatedSynchronousErrorHandling)this._deprecatedSyncErrorSubscribe(o);else{var s=this.operator,u=this.source;o.add(s?s.call(o,u):u?this._subscribe(o):this._trySubscribe(o))}return o},e.prototype._deprecatedSyncErrorSubscribe=function(r){var e=r;e._syncErrorHack_isSubscribing=!0;var t=this.operator;if(t)r.add(t.call(r,this.source));else try{r.add(this._subscribe(r))}catch(n){e.__syncError=n}for(var i=e;i;){if(\"__syncError\"in i)try{throw i.__syncError}finally{r.unsubscribe()}i=i.destination}e._syncErrorHack_isSubscribing=!1},e.prototype._trySubscribe=function(r){try{return this._subscribe(r)}catch(e){r.error(e)}},e.prototype.forEach=function(r,e){var t=this;return new(e=u(e))(function(e,i){var n;n=t.subscribe(function(e){try{r(e)}catch(t){i(t),null==n||n.unsubscribe()}},i,e)})},e.prototype._subscribe=function(r){var e;return null===(e=this.source)||void 0===e?void 0:e.subscribe(r)},e.prototype[t.observable]=function(){return this},e.prototype.pipe=function(){for(var r=[],e=0;e<arguments.length;e++)r[e]=arguments[e];return r.length?(0,i.pipeFromArray)(r)(this):this},e.prototype.toPromise=function(r){var e=this;return new(r=u(r))(function(r,t){var i;e.subscribe(function(r){return i=r},function(r){return t(r)},function(){return r(i)})})},e.create=function(r){return new e(r)},e}();function u(r){var e;return null!==(e=null!=r?r:n.config.Promise)&&void 0!==e?e:Promise}function c(r){return r&&(0,o.isFunction)(r.next)&&(0,o.isFunction)(r.error)&&(0,o.isFunction)(r.complete)}function b(t){return t&&t instanceof r.Subscriber||c(t)&&(0,e.isSubscription)(t)}exports.Observable=s;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":0}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":13}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":20}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":35}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":43}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":56}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":57}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":64}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":68}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":76}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":92}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":98}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":1,"column":108}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":124}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":126}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":6,"column":0},"generated":{"line":1,"column":134}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":152}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":154}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":1,"column":162}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":185}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":187}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":1,"column":195}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":210}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":212}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":1,"column":220}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":232}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":234}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":1,"column":242}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":263}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":265}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":1,"column":276}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":2},"generated":{"line":1,"column":285}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":1,"column":287}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":1,"column":290}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":39,"column":11},"generated":{"line":1,"column":294}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":39,"column":11},"generated":{"line":1,"column":299}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":39,"column":24},"generated":{"line":1,"column":310}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":524,"column":0},"generated":{"line":1,"column":313}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":1,"column":320}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":1,"column":322}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":1,"column":332}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":2},"generated":{"line":1,"column":337}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":69,"column":10},"generated":{"line":1,"column":346}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":10},"generated":{"line":1,"column":349}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":10},"generated":{"line":1,"column":353}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":23},"generated":{"line":1,"column":355}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":70,"column":27},"generated":{"line":1,"column":359}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":73,"column":11},"generated":{"line":1,"column":361}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":71,"column":4},"generated":{"line":1,"column":368}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":71,"column":15},"generated":{"line":1,"column":370}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":71,"column":24},"generated":{"line":1,"column":377}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":72,"column":4},"generated":{"line":1,"column":382}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":72,"column":15},"generated":{"line":1,"column":384}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":72,"column":26},"generated":{"line":1,"column":393}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":73,"column":11},"generated":{"line":1,"column":395}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":1,"column":398}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":1,"column":400}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":1,"column":410}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":212,"column":2},"generated":{"line":1,"column":420}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":213,"column":4},"generated":{"line":1,"column":429}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":214,"column":4},"generated":{"line":1,"column":431}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":215,"column":4},"generated":{"line":1,"column":433}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":10},"generated":{"line":1,"column":436}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":10},"generated":{"line":1,"column":440}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":23},"generated":{"line":1,"column":442}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":36},"generated":{"line":1,"column":444}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":54},"generated":{"line":1,"column":447}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":71},"generated":{"line":1,"column":449}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":75},"generated":{"line":1,"column":453}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":71},"generated":{"line":1,"column":455}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":90},"generated":{"line":1,"column":470}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":106},"generated":{"line":1,"column":472}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":217,"column":113},"generated":{"line":1,"column":474}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":8},"generated":{"line":1,"column":477}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":8},"generated":{"line":1,"column":480}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":15},"generated":{"line":1,"column":482}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":219,"column":15},"generated":{"line":1,"column":489}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":220,"column":11},"generated":{"line":1,"column":527}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":220,"column":11},"generated":{"line":1,"column":532}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":220,"column":41},"generated":{"line":1,"column":562}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":221,"column":11},"generated":{"line":1,"column":569}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":222,"column":12},"generated":{"line":1,"column":570}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":222,"column":14},"generated":{"line":1,"column":574}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":222,"column":35},"generated":{"line":1,"column":576}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":222,"column":22},"generated":{"line":1,"column":581}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":222,"column":24},"generated":{"line":1,"column":590}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":222,"column":35},"generated":{"line":1,"column":592}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":222,"column":30},"generated":{"line":1,"column":597}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":223,"column":6},"generated":{"line":1,"column":604}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":223,"column":17},"generated":{"line":1,"column":606}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":224,"column":8},"generated":{"line":1,"column":610}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":12},"generated":{"line":1,"column":612}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":21},"generated":{"line":1,"column":614}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":26},"generated":{"line":1,"column":619}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":227,"column":38},"generated":{"line":1,"column":621}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":228,"column":12},"generated":{"line":1,"column":624}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":232,"column":12},"generated":{"line":1,"column":626}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":232,"column":17},"generated":{"line":1,"column":631}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":232,"column":28},"generated":{"line":1,"column":642}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":235,"column":12},"generated":{"line":1,"column":645}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":235,"column":17},"generated":{"line":1,"column":650}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":235,"column":31},"generated":{"line":1,"column":664}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":238,"column":11},"generated":{"line":1,"column":668}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":238,"column":11},"generated":{"line":1,"column":675}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":244,"column":10},"generated":{"line":1,"column":678}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":244,"column":10},"generated":{"line":1,"column":680}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":244,"column":10},"generated":{"line":1,"column":690}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":244,"column":2},"generated":{"line":1,"column":720}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":244,"column":40},"generated":{"line":1,"column":729}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":10},"generated":{"line":1,"column":732}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":10},"generated":{"line":1,"column":736}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":245,"column":33},"generated":{"line":1,"column":738}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":4},"generated":{"line":1,"column":740}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":20},"generated":{"line":1,"column":742}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":246,"column":51},"generated":{"line":1,"column":772}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":247,"column":12},"generated":{"line":1,"column":774}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":247,"column":12},"generated":{"line":1,"column":778}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":247,"column":25},"generated":{"line":1,"column":780}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":247,"column":29},"generated":{"line":1,"column":785}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":8},"generated":{"line":1,"column":794}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":248,"column":8},"generated":{"line":1,"column":797}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":6},"generated":{"line":1,"column":799}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":17},"generated":{"line":1,"column":801}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":21},"generated":{"line":1,"column":805}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":30},"generated":{"line":1,"column":807}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":35},"generated":{"line":1,"column":812}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":47},"generated":{"line":1,"column":814}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":252,"column":52},"generated":{"line":1,"column":819}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":254,"column":10},"generated":{"line":1,"column":833}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":255,"column":8},"generated":{"line":1,"column":837}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":255,"column":19},"generated":{"line":1,"column":839}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":255,"column":23},"generated":{"line":1,"column":843}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":255,"column":28},"generated":{"line":1,"column":848}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":255,"column":39},"generated":{"line":1,"column":859}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":256,"column":8},"generated":{"line":1,"column":863}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":256,"column":15},"generated":{"line":1,"column":869}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":257,"column":8},"generated":{"line":1,"column":872}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":257,"column":24},"generated":{"line":1,"column":874}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":257,"column":38},"generated":{"line":1,"column":886}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":11},"generated":{"line":1,"column":888}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":266,"column":8},"generated":{"line":1,"column":892}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":266,"column":8},"generated":{"line":1,"column":896}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":266,"column":15},"generated":{"line":1,"column":898}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":11},"generated":{"line":1,"column":900}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":267,"column":17},"generated":{"line":1,"column":903}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":271,"column":10},"generated":{"line":1,"column":904}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":271,"column":10},"generated":{"line":1,"column":907}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":271,"column":27},"generated":{"line":1,"column":923}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":272,"column":12},"generated":{"line":1,"column":925}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":273,"column":16},"generated":{"line":1,"column":929}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":273,"column":16},"generated":{"line":1,"column":935}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":273,"column":21},"generated":{"line":1,"column":937}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":274,"column":18},"generated":{"line":1,"column":949}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":275,"column":10},"generated":{"line":1,"column":957}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":275,"column":21},"generated":{"line":1,"column":959}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":278,"column":6},"generated":{"line":1,"column":973}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":278,"column":13},"generated":{"line":1,"column":975}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":278,"column":18},"generated":{"line":1,"column":977}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":4},"generated":{"line":1,"column":989}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":20},"generated":{"line":1,"column":991}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":281,"column":51},"generated":{"line":1,"column":1021}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":285,"column":12},"generated":{"line":1,"column":1024}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":285,"column":12},"generated":{"line":1,"column":1026}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":285,"column":12},"generated":{"line":1,"column":1036}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":285,"column":2},"generated":{"line":1,"column":1050}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":285,"column":26},"generated":{"line":1,"column":1059}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":286,"column":8},"generated":{"line":1,"column":1062}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":287,"column":13},"generated":{"line":1,"column":1066}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":287,"column":13},"generated":{"line":1,"column":1073}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":287,"column":18},"generated":{"line":1,"column":1078}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":287,"column":29},"generated":{"line":1,"column":1089}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":288,"column":6},"generated":{"line":1,"column":1092}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":288,"column":13},"generated":{"line":1,"column":1098}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":292,"column":6},"generated":{"line":1,"column":1101}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":292,"column":11},"generated":{"line":1,"column":1103}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":292,"column":17},"generated":{"line":1,"column":1109}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1114}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1116}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1126}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1134}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":10},"generated":{"line":1,"column":1143}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":36},"generated":{"line":1,"column":1145}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1148}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1152}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":355,"column":2},"generated":{"line":1,"column":1154}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":11},"generated":{"line":1,"column":1159}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":11},"generated":{"line":1,"column":1166}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":356,"column":4},"generated":{"line":1,"column":1170}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":356,"column":18},"generated":{"line":1,"column":1172}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":356,"column":33},"generated":{"line":1,"column":1174}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":33},"generated":{"line":1,"column":1178}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":34},"generated":{"line":1,"column":1187}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":358,"column":43},"generated":{"line":1,"column":1189}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":10},"generated":{"line":1,"column":1192}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":361,"column":10},"generated":{"line":1,"column":1196}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":362,"column":6},"generated":{"line":1,"column":1198}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":362,"column":21},"generated":{"line":1,"column":1200}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":362,"column":26},"generated":{"line":1,"column":1202}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":363,"column":8},"generated":{"line":1,"column":1212}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":363,"column":9},"generated":{"line":1,"column":1221}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":364,"column":14},"generated":{"line":1,"column":1224}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":365,"column":12},"generated":{"line":1,"column":1228}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":365,"column":17},"generated":{"line":1,"column":1230}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":366,"column":12},"generated":{"line":1,"column":1233}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":366,"column":19},"generated":{"line":1,"column":1239}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":12},"generated":{"line":1,"column":1242}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":367,"column":19},"generated":{"line":1,"column":1244}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":368,"column":12},"generated":{"line":1,"column":1247}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":368,"column":12},"generated":{"line":1,"column":1253}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":368,"column":12},"generated":{"line":1,"column":1256}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":368,"column":26},"generated":{"line":1,"column":1258}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":371,"column":8},"generated":{"line":1,"column":1274}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":372,"column":8},"generated":{"line":1,"column":1276}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":378,"column":12},"generated":{"line":1,"column":1282}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":378,"column":12},"generated":{"line":1,"column":1284}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":378,"column":12},"generated":{"line":1,"column":1294}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":378,"column":2},"generated":{"line":1,"column":1305}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":378,"column":23},"generated":{"line":1,"column":1314}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":1317}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":1321}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":11},"generated":{"line":1,"column":1323}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":22},"generated":{"line":1,"column":1330}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":11},"generated":{"line":1,"column":1338}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":11},"generated":{"line":1,"column":1340}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":16},"generated":{"line":1,"column":1345}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":22},"generated":{"line":1,"column":1359}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":22},"generated":{"line":1,"column":1363}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":22},"generated":{"line":1,"column":1370}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":22},"generated":{"line":1,"column":1372}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":24},"generated":{"line":1,"column":1374}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":379,"column":34},"generated":{"line":1,"column":1384}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":387,"column":2},"generated":{"line":1,"column":1388}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":387,"column":2},"generated":{"line":1,"column":1390}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":387,"column":3},"generated":{"line":1,"column":1400}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":387,"column":2},"generated":{"line":1,"column":1402}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":387,"column":2},"generated":{"line":1,"column":1414}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":388,"column":11},"generated":{"line":1,"column":1425}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":388,"column":11},"generated":{"line":1,"column":1432}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":2},"generated":{"line":1,"column":1438}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":2},"generated":{"line":1,"column":1440}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":2},"generated":{"line":1,"column":1450}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":2},"generated":{"line":1,"column":1455}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1466}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1470}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1474}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1476}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1479}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1481}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1483}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1485}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1495}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1502}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1506}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1508}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1511}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":481,"column":7},"generated":{"line":1,"column":1521}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":11},"generated":{"line":1,"column":1524}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":11},"generated":{"line":1,"column":1531}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":22},"generated":{"line":1,"column":1533}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":31},"generated":{"line":1,"column":1541}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":45},"generated":{"line":1,"column":1543}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":45},"generated":{"line":1,"column":1545}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":45},"generated":{"line":1,"column":1560}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":31},"generated":{"line":1,"column":1562}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":57},"generated":{"line":1,"column":1563}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":482,"column":65},"generated":{"line":1,"column":1569}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":2},"generated":{"line":1,"column":1575}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":2},"generated":{"line":1,"column":1577}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":2},"generated":{"line":1,"column":1587}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":2},"generated":{"line":1,"column":1597}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":12},"generated":{"line":1,"column":1606}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":2},"generated":{"line":1,"column":1609}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":2},"generated":{"line":1,"column":1613}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":512,"column":2},"generated":{"line":1,"column":1615}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":515,"column":11},"generated":{"line":1,"column":1620}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":515,"column":11},"generated":{"line":1,"column":1627}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":513,"column":4},"generated":{"line":1,"column":1631}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":513,"column":18},"generated":{"line":1,"column":1633}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":513,"column":33},"generated":{"line":1,"column":1635}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":515,"column":27},"generated":{"line":1,"column":1639}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":515,"column":28},"generated":{"line":1,"column":1648}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":515,"column":37},"generated":{"line":1,"column":1650}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":516,"column":10},"generated":{"line":1,"column":1653}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":516,"column":10},"generated":{"line":1,"column":1657}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":517,"column":6},"generated":{"line":1,"column":1659}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":517,"column":11},"generated":{"line":1,"column":1661}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":518,"column":8},"generated":{"line":1,"column":1671}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":518,"column":9},"generated":{"line":1,"column":1680}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":518,"column":19},"generated":{"line":1,"column":1683}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":518,"column":19},"generated":{"line":1,"column":1690}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":518,"column":27},"generated":{"line":1,"column":1692}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":519,"column":8},"generated":{"line":1,"column":1695}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":519,"column":9},"generated":{"line":1,"column":1704}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":519,"column":22},"generated":{"line":1,"column":1707}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":519,"column":22},"generated":{"line":1,"column":1714}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":519,"column":29},"generated":{"line":1,"column":1716}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":520,"column":8},"generated":{"line":1,"column":1720}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":520,"column":14},"generated":{"line":1,"column":1731}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":520,"column":14},"generated":{"line":1,"column":1738}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":520,"column":22},"generated":{"line":1,"column":1740}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":1748}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":54,"column":9},"generated":{"line":1,"column":1750}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":54,"column":43},"generated":{"line":1,"column":1757}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":54,"column":47},"generated":{"line":1,"column":1766}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":11},"generated":{"line":1,"column":1769}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":11},"generated":{"line":1,"column":1776}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":15},"generated":{"line":1,"column":1780}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":55,"column":29},"generated":{"line":1,"column":1782}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":524,"column":0},"generated":{"line":1,"column":1786}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":19,"column":0},"generated":{"line":1,"column":1788}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":533,"column":0},"generated":{"line":1,"column":1791}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":533,"column":9},"generated":{"line":1,"column":1800}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":533,"column":24},"generated":{"line":1,"column":1802}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":1805}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":1809}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":9},"generated":{"line":1,"column":1811}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":38},"generated":{"line":1,"column":1818}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":9},"generated":{"line":1,"column":1826}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":9},"generated":{"line":1,"column":1828}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":9},"generated":{"line":1,"column":1834}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":9},"generated":{"line":1,"column":1836}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":24},"generated":{"line":1,"column":1838}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":31},"generated":{"line":1,"column":1840}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":31},"generated":{"line":1,"column":1847}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":38},"generated":{"line":1,"column":1862}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":38},"generated":{"line":1,"column":1866}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":38},"generated":{"line":1,"column":1868}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":534,"column":42},"generated":{"line":1,"column":1870}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":537,"column":0},"generated":{"line":1,"column":1878}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":537,"column":9},"generated":{"line":1,"column":1887}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":537,"column":23},"generated":{"line":1,"column":1889}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":9},"generated":{"line":1,"column":1892}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":9},"generated":{"line":1,"column":1899}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":18},"generated":{"line":1,"column":1903}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":29},"generated":{"line":1,"column":1905}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":29},"generated":{"line":1,"column":1907}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":29},"generated":{"line":1,"column":1919}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":35},"generated":{"line":1,"column":1921}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":44},"generated":{"line":1,"column":1929}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":55},"generated":{"line":1,"column":1931}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":55},"generated":{"line":1,"column":1933}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":55},"generated":{"line":1,"column":1945}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":61},"generated":{"line":1,"column":1947}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":71},"generated":{"line":1,"column":1956}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":82},"generated":{"line":1,"column":1958}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":82},"generated":{"line":1,"column":1960}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":82},"generated":{"line":1,"column":1972}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":538,"column":88},"generated":{"line":1,"column":1974}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":541,"column":0},"generated":{"line":1,"column":1984}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":541,"column":9},"generated":{"line":1,"column":1993}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":541,"column":25},"generated":{"line":1,"column":1995}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":10},"generated":{"line":1,"column":1998}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":10},"generated":{"line":1,"column":2005}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":19},"generated":{"line":1,"column":2008}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":36},"generated":{"line":1,"column":2021}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":9},"generated":{"line":1,"column":2023}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":52},"generated":{"line":1,"column":2035}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":63},"generated":{"line":1,"column":2037}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":73},"generated":{"line":1,"column":2042}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":88},"generated":{"line":1,"column":2044}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":88},"generated":{"line":1,"column":2046}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":542,"column":88},"generated":{"line":1,"column":2062}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":2065}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":2073}},{"source":"../../../src/internal/Observable.ts","name":null,"original":{"line":543,"column":1},"generated":{"line":1,"column":2084}}],"sources":{"../../../src/internal/Observable.ts":"/**\n * @prettier\n */\nimport { Operator } from './Operator';\nimport { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription, Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, Subscribable, Observer } from './types';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  source: Observable<any> | undefined;\n\n  /**\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   */\n  operator: Operator<any, T> | undefined;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new Observable by calling the Observable constructor\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new observable\n   * @nocollapse\n   * @deprecated Use `new Observable()` instead. Will be removed in v8.\n   */\n  static create: (...args: any[]) => any = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  };\n\n  /**\n   * Creates a new Observable, with this Observable instance as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param operator the operator defining the operation to take on the observable\n   * @return a new observable with the Operator applied\n   * @deprecated Internal implementation detail, do not use directly. Will be made internal in v8.\n   * If you have implemented an operator using `lift`, it is recommended that you create an\n   * operator by simply returning `new Observable()` directly. See \"Creating new operators from\n   * scratch\" section here: https://rxjs.dev/guide/operators\n   */\n  lift<R>(operator?: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: Partial<Observer<T>>): Subscription;\n  subscribe(next: (value: T) => void): Subscription;\n  /** @deprecated Instead of passing separate callback arguments, use an observer argument. Signatures taking separate callback arguments will be removed in v8. Details: https://rxjs.dev/deprecations/subscribe-arguments */\n  subscribe(next?: ((value: T) => void) | null, error?: ((error: any) => void) | null, complete?: (() => void) | null): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular, do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided and an error happens,\n   * it will be thrown asynchronously. Errors thrown asynchronously cannot be caught using `try`/`catch`. Instead,\n   * use the {@link onUnhandledError} configuration option or use a runtime handler (like `window.onerror` or\n   * `process.on('error)`) to be notified of unhandled errors. Because of this, it's recommended that you provide\n   * an `error` method to avoid missing thrown errors.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of an Observer,\n   * if you do not need to listen for something, you can omit a function by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to the `error` function, as with an Observer, if not provided, errors emitted by an Observable will be thrown asynchronously.\n   *\n   * You can, however, subscribe with no parameters at all. This may be the case where you're not interested in terminal events\n   * and you also handled emissions internally by using operators (e.g. using `tap`).\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe({\n   *   next(num) {\n   *     console.log(num)\n   *   },\n   *   complete() {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * });\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown asynchronously as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {Subscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(\n    observerOrNext?: Partial<Observer<T>> | ((value: T) => void) | null,\n    error?: ((error: any) => void) | null,\n    complete?: (() => void) | null\n  ): Subscription {\n    const subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      this._deprecatedSyncErrorSubscribe(subscriber);\n    } else {\n      const { operator, source } = this;\n      subscriber.add(\n        operator\n          ? // We're dealing with a subscription in the\n            // operator chain to one of our lifted operators.\n            operator.call(subscriber, source)\n          : source\n          ? // If `source` has a value, but `operator` does not, something that\n            // had intimate knowledge of our API, like our `Subject`, must have\n            // set it. We're going to just call `_subscribe` directly.\n            this._subscribe(subscriber)\n          : // In all other cases, we're likely wrapping a user-provided initializer\n            // function, so we need to catch errors and handle them appropriately.\n            this._trySubscribe(subscriber)\n      );\n    }\n    return subscriber;\n  }\n\n  /**\n   * REMOVE THIS ENTIRE METHOD IN VERSION 8.\n   */\n  private _deprecatedSyncErrorSubscribe(subscriber: Subscriber<unknown>) {\n    const localSubscriber: any = subscriber;\n    localSubscriber._syncErrorHack_isSubscribing = true;\n    const { operator } = this;\n    if (operator) {\n      // We don't need to try/catch on operators, as they\n      // are doing their own try/catching, and will\n      // properly decorate the subscriber with `__syncError`.\n      subscriber.add(operator.call(subscriber, this.source));\n    } else {\n      try {\n        subscriber.add(this._subscribe(subscriber));\n      } catch (err) {\n        localSubscriber.__syncError = err;\n      }\n    }\n\n    // In the case of the deprecated sync error handling,\n    // we need to crawl forward through our subscriber chain and\n    // look to see if there's any synchronously thrown errors.\n    // Does this suck for perf? Yes. So stop using the deprecated sync\n    // error handling already. We're removing this in v8.\n    let dest = localSubscriber;\n    while (dest) {\n      // Technically, someone could throw something falsy, like 0, or \"\",\n      // so we need to check to see if anything was thrown, and we know\n      // that by the mere existence of `__syncError`.\n      if ('__syncError' in dest) {\n        try {\n          throw dest.__syncError;\n        } finally {\n          subscriber.unsubscribe();\n        }\n      }\n      dest = dest.destination;\n    }\n\n    localSubscriber._syncErrorHack_isSubscribing = false;\n  }\n\n  /** @internal */\n  protected _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      // We don't need to return anything in this case,\n      // because it's just going to try to `add()` to a subscription\n      // above.\n      sink.error(err);\n    }\n  }\n\n  /**\n   * Used as a NON-CANCELLABLE means of subscribing to an observable, for use with\n   * APIs that expect promises, like `async/await`. You cannot unsubscribe from this.\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * ### Example:\n   *\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { take } from 'rxjs/operators';\n   *\n   * const source$ = interval(1000).pipe(take(4));\n   *\n   * async function getTotal() {\n   *    let total = 0;\n   *\n   *    await source$.forEach(value => {\n   *      total += value;\n   *      console.log('observable -> ', value);\n   *    });\n   *\n   *    return total;\n   * }\n   *\n   * getTotal().then(\n   *    total => console.log('Total:', total)\n   * )\n   *\n   * // Expected:\n   * // \"observable -> 0\"\n   * // \"observable -> 1\"\n   * // \"observable -> 2\"\n   * // \"observable -> 3\"\n   * // \"Total: 6\"\n   * ```\n   * @param next a handler for each value emitted by the observable\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void): Promise<void>;\n\n  /**\n   * @param next a handler for each value emitted by the observable\n   * @param promiseCtor a constructor function used to instantiate the Promise\n   * @return a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   * @deprecated Passing a Promise constructor will no longer be available\n   * in upcoming versions of RxJS. This is because it adds weight to the library, for very\n   * little benefit. If you need this functionality, it is recommended that you either\n   * polyfill Promise, or you create an adapter to convert the returned native promise\n   * to whatever promise implementation you wanted. Will be removed in v8.\n   */\n  forEach(next: (value: T) => void, promiseCtor: PromiseConstructorLike): Promise<void>;\n\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe(\n        (value) => {\n          try {\n            next(value);\n          } catch (err) {\n            reject(err);\n            subscription?.unsubscribe();\n          }\n        },\n        reject,\n        resolve\n      );\n    }) as Promise<void>;\n  }\n\n  /** @internal */\n  protected _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    return this.source?.subscribe(subscriber);\n  }\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>\n  ): Observable<D>;\n  pipe<A, B, C, D, E>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>\n  ): Observable<E>;\n  pipe<A, B, C, D, E, F>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>\n  ): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>\n  ): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>\n  ): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>\n  ): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(\n    op1: OperatorFunction<T, A>,\n    op2: OperatorFunction<A, B>,\n    op3: OperatorFunction<B, C>,\n    op4: OperatorFunction<C, D>,\n    op5: OperatorFunction<D, E>,\n    op6: OperatorFunction<E, F>,\n    op7: OperatorFunction<F, G>,\n    op8: OperatorFunction<G, H>,\n    op9: OperatorFunction<H, I>,\n    ...operations: OperatorFunction<any, any>[]\n  ): Observable<unknown>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    return operations.length ? pipeFromArray(operations)(this) : this;\n  }\n\n  /* tslint:disable:max-line-length */\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: typeof Promise): Promise<T | undefined>;\n  /** @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise */\n  toPromise(PromiseCtor: PromiseConstructorLike): Promise<T | undefined>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Subscribe to this Observable and get a Promise resolving on\n   * `complete` with the last emission (if any).\n   *\n   * **WARNING**: Only use this with observables you *know* will complete. If the source\n   * observable does not complete, you will end up with a promise that is hung up, and\n   * potentially all of the state of an async function hanging out in memory. To avoid\n   * this situation, look into adding something like {@link timeout}, {@link take},\n   * {@link takeWhile}, or {@link takeUntil} amongst others.\n   *\n   * @method toPromise\n   * @param [promiseCtor] a constructor function used to instantiate\n   * the Promise\n   * @return A Promise that resolves with the last value emit, or\n   * rejects on an error. If there were no emissions, Promise\n   * resolves with undefined.\n   * @deprecated Replaced with {@link firstValueFrom} and {@link lastValueFrom}. Will be removed in v8. Details: https://rxjs.dev/deprecations/to-promise\n   */\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T | undefined> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: T | undefined;\n      this.subscribe(\n        (x: T) => (value = x),\n        (err: any) => reject(err),\n        () => resolve(value)\n      );\n    }) as Promise<T | undefined>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  return promiseCtor ?? config.Promise ?? Promise;\n}\n\nfunction isObserver<T>(value: any): value is Observer<T> {\n  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\n\nfunction isSubscriber<T>(value: any): value is Subscriber<T> {\n  return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n"},"lineCount":null}},"error":null,"hash":"c63d2f03e2b3caaff94971e5497f45b8","cacheData":{"env":{}}}