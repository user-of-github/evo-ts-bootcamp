{"id":"../node_modules/rxjs/dist/esm5/internal/observable/onErrorResumeNext.js","dependencies":[{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\onErrorResumeNext.js.map","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\src\\internal\\observable\\onErrorResumeNext.ts","includedInParent":true,"mtime":1621859693337},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\package.json","includedInParent":true,"mtime":1621953013143},{"name":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\package.json","includedInParent":true,"mtime":1621859693337},{"name":"./empty","loc":{"line":1,"column":22},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\onErrorResumeNext.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\empty.js"},{"name":"../operators/onErrorResumeNext","loc":{"line":2,"column":59},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\onErrorResumeNext.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\operators\\onErrorResumeNext.js"},{"name":"../util/argsOrArgArray","loc":{"line":3,"column":31},"parent":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\observable\\onErrorResumeNext.js","resolved":"C:\\Users\\User\\Desktop\\Other\\HomeWork\\Bootcamp\\homeworks\\08-functional-reactive-programming\\node_modules\\rxjs\\dist\\esm5\\internal\\util\\argsOrArgArray.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onErrorResumeNext = onErrorResumeNext;\n\nvar _empty = require(\"./empty\");\n\nvar _onErrorResumeNext = require(\"../operators/onErrorResumeNext\");\n\nvar _argsOrArgArray = require(\"../util/argsOrArgArray\");\n\nfunction onErrorResumeNext() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  return (0, _onErrorResumeNext.onErrorResumeNext)((0, _argsOrArgArray.argsOrArgArray)(sources))(_empty.EMPTY);\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":4,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":5,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":14,"column":0}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":72,"column":16},"generated":{"line":14,"column":9}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":72,"column":6},"generated":{"line":14,"column":26}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":72,"column":33},"generated":{"line":14,"column":29}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":15,"column":0}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":15,"column":6}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":15,"column":13}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":15,"column":16}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":15,"column":18}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":7}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":11}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":13}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":16}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":19}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":21}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":24}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":33}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":34}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":42}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":17,"column":44}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":75},"generated":{"line":17,"column":48}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":0}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":4}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":11}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":12}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":14}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":15}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":18}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":27}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":28}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":30}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":73,"column":2},"generated":{"line":18,"column":31}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":21,"column":0}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":21,"column":9}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":31},"generated":{"line":21,"column":51}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":46},"generated":{"line":21,"column":87}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":31},"generated":{"line":21,"column":94}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":21,"column":95}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":56},"generated":{"line":21,"column":97}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":9},"generated":{"line":21,"column":109}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":75,"column":2},"generated":{"line":21,"column":110}},{"source":"../../../../src/internal/observable/onErrorResumeNext.ts","name":null,"original":{"line":76,"column":1},"generated":{"line":22,"column":0}}],"sources":{"../../../../src/internal/observable/onErrorResumeNext.ts":"import { Observable } from '../Observable';\nimport { ObservableInputTuple } from '../types';\nimport { EMPTY } from './empty';\nimport { onErrorResumeNext as onErrorResumeNextWith } from '../operators/onErrorResumeNext';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<A extends readonly unknown[]>(sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\nexport function onErrorResumeNext<A extends readonly unknown[]>(...sources: [...ObservableInputTuple<A>]): Observable<A[number]>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<A extends readonly unknown[]>(\n  ...sources: [[...ObservableInputTuple<A>]] | [...ObservableInputTuple<A>]\n): Observable<A[number]> {\n  return onErrorResumeNextWith(argsOrArgArray(sources))(EMPTY);\n}\n"},"lineCount":null}},"error":null,"hash":"af7c46e66057a53aea9381676c359f64","cacheData":{"env":{}}}